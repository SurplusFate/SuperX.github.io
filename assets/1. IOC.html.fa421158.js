import{_ as n}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as t,c as s,e}from"./app.d1fa9fbf.js";const a={},l=e(`<h1 id="_1-ioc" tabindex="-1"><a class="header-anchor" href="#_1-ioc" aria-hidden="true">#</a> 1. IOC</h1><p>IoC (Inversion of Control) : 控制反转, 是一个理论,概念,思想</p><p>描述: <strong>把对象的创建,赋值,管理工作都交给代码之外的容器实现</strong>, 也就是<strong>对象的创建是有其它外部资源完成</strong></p><blockquote><p>正转: 由开发人员在代码中,使用 new 构造方法创建对象, 开发人员主动管理对象</p><p>public static void main(String args[]){</p><p>Student student = new Student(); // 在代码中, 创建对象--正转</p></blockquote><p><strong>控制</strong>: 创建对象,对象的属性赋值,对象之间的关系管理</p><p><strong>反转</strong>: 把原来的开发人员管理,创建对象的权限转移给代码之外的容器实现 由容器代替开发人员管理对象创建对象,给属性赋值</p><p><strong>容器</strong>: 是一个服务器软件, 一个框架（spring）</p><p>为什么要使用 ioc : 目的就是减少对代码的改动, 也能实现不同的功能 实现解耦合</p><blockquote><p>java 中创建对象有哪些方式:</p><ul><li>构造方法 , new Student（）</li><li>反射</li><li>序列化</li><li>克隆</li><li>ioc : 容器创建对象</li><li>动态代理</li></ul></blockquote><p><strong>ioc 的体现:</strong></p><p>servlet:</p><ol><li>创建类继承 HttpServelt</li><li>在 web.xml 注册 servlet ,使用</li></ol><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-name</span><span class="token punctuation">&gt;</span></span> myservlet <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-name</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servelt-class</span><span class="token punctuation">&gt;</span></span>com.bjpwernode.controller.MyServlet1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servelt-class</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ol><li>没有创建 Servlet 对象, 没有 <code>MyServlet myservlet = new MyServlet()</code></li><li>Servlet 是 Tomcat 服务器它为你创建的 Tomcat 也称为容器</li></ol><p>Tomcat 作为容器: 里面存放的有 Servlet 对象, Listener , Filter 对象</p><p><strong>IoC 的技术实现:</strong></p><p>DI 是 ioc 的技术实现,</p><p>DI（Dependency Injection） :依赖注入, <strong>只需要在程序中提供要使用的对象名称就可以</strong>, 至于对象如何在容器中创建, 赋值,查找都由容器内部实现</p>`,18),o=[l];function p(c,i){return t(),s("div",null,o)}const d=n(a,[["render",p],["__file","1. IOC.html.vue"]]);export{d as default};
