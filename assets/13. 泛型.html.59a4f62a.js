const e=JSON.parse('{"key":"v-cbc4a12a","path":"/docs/Java/13.%20%E6%B3%9B%E5%9E%8B.html","title":"13. 泛型","lang":"zh-CN","frontmatter":{"icon":"note","date":"2022-08-11T00:00:00.000Z","order":13,"category":["java"],"summary":"13. 泛型 在没有泛型之前，一旦把一个对象“丢进”Java 集合中，集合就会忘记对象的类型，把所有的对象当成 Object 类型处理。当程序从集合中取出对象后，就需要进行强制类型转换，这种强制类型转换不仅使代码臃肿，而且容易引起 ClassCastExeception 异常。 泛型入门 Java 集合有个缺点——当我们把一个对象“丢进”集合里后，集合就会“","head":[["meta",{"property":"og:url","content":"https://SurplusFate.github.io/docs/Java/13.%20%E6%B3%9B%E5%9E%8B.html"}],["meta",{"property":"og:site_name","content":"空~"}],["meta",{"property":"og:title","content":"13. 泛型"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2022-10-25T10:07:49.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:published_time","content":"2022-08-11T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2022-10-25T10:07:49.000Z"}]]},"excerpt":"","headers":[{"level":2,"title":"泛型入门","slug":"泛型入门","link":"#泛型入门","children":[{"level":3,"title":"编译时不检查类型的异常","slug":"编译时不检查类型的异常","link":"#编译时不检查类型的异常","children":[]},{"level":3,"title":"手动实现编译时检查类型","slug":"手动实现编译时检查类型","link":"#手动实现编译时检查类型","children":[]},{"level":3,"title":"使用泛型","slug":"使用泛型","link":"#使用泛型","children":[]},{"level":3,"title":"“菱形”语法","slug":"菱形-语法","link":"#菱形-语法","children":[]}]},{"level":2,"title":"深入泛型","slug":"深入泛型","link":"#深入泛型","children":[{"level":3,"title":"定义泛型接口、类","slug":"定义泛型接口、类","link":"#定义泛型接口、类","children":[]},{"level":3,"title":"从泛型类派生子类","slug":"从泛型类派生子类","link":"#从泛型类派生子类","children":[]},{"level":3,"title":"不存在泛型类","slug":"不存在泛型类","link":"#不存在泛型类","children":[]}]},{"level":2,"title":"类型通配符","slug":"类型通配符","link":"#类型通配符","children":[{"level":3,"title":"使用类型通配符","slug":"使用类型通配符","link":"#使用类型通配符","children":[]},{"level":3,"title":"设定类型通配符的上限","slug":"设定类型通配符的上限","link":"#设定类型通配符的上限","children":[]},{"level":3,"title":"设定类型形参的上限","slug":"设定类型形参的上限","link":"#设定类型形参的上限","children":[]}]},{"level":2,"title":"泛型方法","slug":"泛型方法","link":"#泛型方法","children":[{"level":3,"title":"定义泛型方法","slug":"定义泛型方法","link":"#定义泛型方法","children":[]},{"level":3,"title":"泛型方法和类型通配符的区别","slug":"泛型方法和类型通配符的区别","link":"#泛型方法和类型通配符的区别","children":[]},{"level":3,"title":"Java 7 的“菱形”语法与泛型构造器","slug":"java-7-的-菱形-语法与泛型构造器","link":"#java-7-的-菱形-语法与泛型构造器","children":[]},{"level":3,"title":"设定通配符下限","slug":"设定通配符下限","link":"#设定通配符下限","children":[]},{"level":3,"title":"泛型方法与方法重载","slug":"泛型方法与方法重载","link":"#泛型方法与方法重载","children":[]}]},{"level":2,"title":"擦除和转换","slug":"擦除和转换","link":"#擦除和转换","children":[]},{"level":2,"title":"泛型与数组","slug":"泛型与数组","link":"#泛型与数组","children":[]}],"git":{"createdTime":1666692469000,"updatedTime":1666692469000,"contributors":[{"name":"SurplusFate","email":"1543403469@qq.com","commits":1}]},"readingTime":{"minutes":33.06,"words":9918},"filePathRelative":"docs/Java/13. 泛型.md","localizedDate":"2022年8月11日"}');export{e as data};
