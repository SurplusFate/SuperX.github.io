const e=JSON.parse('{"key":"v-0b4e4190","path":"/docs/Spring%20%E7%B3%BB%E5%88%97/Spring/2.%20Spring%E5%88%9B%E5%BB%BA%E5%AF%B9%E8%B1%A1.html","title":"2. Spring 创建对象","lang":"zh-CN","frontmatter":{"icon":"note","date":"2022-09-06T00:00:00.000Z","order":2,"category":["Spring"],"summary":"2. Spring 创建对象 spring 是使用的 di 实现了 ioc 的功能, spring 底层创建对象,使用的是反射机制 spring 是一个容器,管理对象,给属性赋值, 底层是反射创建对象 bean 实例:; 接口; 实现类; beans.xml 配置文件; 测试类; Spring 在创建容器时,会创建配置文件中所有的对象,默认调用的是无参构造方","head":[["meta",{"property":"og:url","content":"https://SurplusFate.github.io/docs/Spring%20%E7%B3%BB%E5%88%97/Spring/2.%20Spring%E5%88%9B%E5%BB%BA%E5%AF%B9%E8%B1%A1.html"}],["meta",{"property":"og:site_name","content":"空~"}],["meta",{"property":"og:title","content":"2. Spring 创建对象"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2022-12-01T08:10:46.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:published_time","content":"2022-09-06T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2022-12-01T08:10:46.000Z"}]]},"excerpt":"","headers":[{"level":2,"title":"获取容器中对象信息的 api","slug":"获取容器中对象信息的-api","link":"#获取容器中对象信息的-api","children":[]}],"git":{"createdTime":1669882246000,"updatedTime":1669882246000,"contributors":[{"name":"superX","email":"1543403469@qq.com","commits":1}]},"readingTime":{"minutes":2.42,"words":726},"filePathRelative":"docs/Spring 系列/Spring/2. Spring创建对象.md","localizedDate":"2022年9月6日"}');export{e as data};
