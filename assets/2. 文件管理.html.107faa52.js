import{_ as a}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as e,c as s,e as n}from"./app.e2b977d0.js";const d={},t=n(`<h1 id="文件管理" tabindex="-1"><a class="header-anchor" href="#文件管理" aria-hidden="true">#</a> 文件管理</h1><h2 id="linux-目录结构" tabindex="-1"><a class="header-anchor" href="#linux-目录结构" aria-hidden="true">#</a> Linux 目录结构</h2><h3 id="目录结构" tabindex="-1"><a class="header-anchor" href="#目录结构" aria-hidden="true">#</a> 目录结构</h3><p>Linux 下一切皆文件.</p><p><img src="https://gcore.jsdelivr.net/gh/SurplusFate/guide_img@main/img/202210102050884.png" alt="image-20220924200453503"></p><p>Linux 将硬件也映射为文件来管理了, 给电脑分配 8 个 CPU 就能在 <code>主文件夹/其他位置/计算机/dev/cpu/</code> 目录下看到 8 个文件夹.</p><p><img src="https://gcore.jsdelivr.net/gh/SurplusFate/guide_img@main/img/202210102050732.png" alt="image-20220929111022437"></p><h3 id="详情" tabindex="-1"><a class="header-anchor" href="#详情" aria-hidden="true">#</a> 详情</h3><table><thead><tr><th>目录</th><th>含义</th></tr></thead><tbody><tr><td>/bin</td><td>Binary 的缩写，用来存二进制可执行文件，并且比较特殊的是/bin 存放的是所有一般用户都能使用的可执行文件，如：cat、chmod、mv、mkdir、cd 等常用指令</td></tr><tr><td>/sbin</td><td>Super User 的意思，存放一些只有 root 用户才有权限执行的可执行文件，如 init,ip,mount 等命令</td></tr><tr><td>/boot</td><td>主要存放开机时用到的引导文件，如 linux 内核文件和开机菜单与开机所有需要的配置文件</td></tr><tr><td>/dev</td><td>device,任何设备都以文件的形式存放再这个目录中。例如硬盘、键盘、鼠标、光驱等各种设备文件。只要通过访问该目录的某个文件就相当于访问了对应的设备</td></tr><tr><td>/etc</td><td>配置文件、启动脚本等（etc)包含所有程序所需的配置文件以及系统的配置文件，如用户的账号密码文件，各个服务的起始文件等。也包含了用于启动/停止单个程序的启动和关闭 shell 脚本。一般来说，该目录下的文件属性是可以让用户查阅，但只有 root 管理员有权利修改</td></tr><tr><td>/home</td><td>系统默认的用户的家目录，每当新建一个用户系统都会在这个目录下创建以该用户名为名称的目录作为该用户的主目录。</td></tr><tr><td>/lib</td><td>library,存放着系统开机时所需的函数库以及/bin 和/sbin 目录下的命令会调用的函数库</td></tr><tr><td>/lib64</td><td>存放相对于/lib 中支持 64 位格式的函数库</td></tr><tr><td>/media</td><td>存放可移除的媒体设备、如光盘，DVD 等</td></tr><tr><td>/mnt</td><td>mount，临时挂载的设备文件，临时安装目录，系统管理员可以挂载文件系统。时系统管理员临时安装文件的系统安装点。</td></tr><tr><td>/opt</td><td>optional，可选的软件包，即第三方文件软件。我们可以将除了系统自带软件之外的其他软件安装到这个目录。</td></tr><tr><td>/proc</td><td>特殊的动态目录，用以 维护系统的信息和状态，包括当前运行中进程（processes)信息。包含系统进程的相关信息，是一个虚拟的文件系统，包含有关正在运行的进程的信息，系统资源以文本信息形式存在。</td></tr><tr><td>/root</td><td>系统管理员 root 的主目录</td></tr><tr><td>/run</td><td>最近一次开机后所产生的各项信息，如当前的用户和正在运行中的守护进程等。</td></tr><tr><td>/srv</td><td>service,存放一些服务启动后所需的数据</td></tr><tr><td>/sys</td><td>system,与/proc 类似也是虚拟文件系统，存放系统核心与硬件相关信息管理设备文件。不占用硬件容量。</td></tr><tr><td>/tmp</td><td>temporary, 存放系统运行过程中使用的一些临时文件，可以被所有就用户访问，系统重启时会清空该目录。</td></tr><tr><td>/usr</td><td>包含绝大部分所有用户（users)都能访问的应用程序和文件包含二进制文件，库文件。文档和二级程序的源代码。</td></tr><tr><td>/var</td><td>经常变化的（variable)文件，诸如日志或数据库等代表变量文件。在这个目录下可以找到内容可能增长的文件</td></tr><tr><td>/lost+found</td><td>一般是空的, 当系统非法关机后, 这里就会存放一些文件; 默认隐藏.</td></tr></tbody></table><h2 id="vi-vim" tabindex="-1"><a class="header-anchor" href="#vi-vim" aria-hidden="true">#</a> VI/VIM</h2><p>VI 是 Unix 操作系统和类 Unix 操作系统中最通用的文本编辑器。</p><p>VIM 编辑器是从 V1 从发展出来的一个性能更强大的文本编辑器。可以主动的以文字颜色辨别语法的正确性，方便程序设计。VIM 与 VI 编辑器完全兼容。</p><h3 id="三种模式" tabindex="-1"><a class="header-anchor" href="#三种模式" aria-hidden="true">#</a> 三种模式</h3><p>正常模式(默认)</p><blockquote><p>在正常模式中可以进行删除、复制、粘贴等动作，但无法增加或修改文件内容.</p></blockquote><p>插入模式</p><blockquote><p>可以编辑内容并保存.</p></blockquote><p>命令行模式</p><blockquote><p>可以执行相关部分命令.</p></blockquote><p><img src="https://gcore.jsdelivr.net/gh/SurplusFate/guide_img@main/img/202210102047468.png" alt="image-20220512160155965"></p><h3 id="正常模式" tabindex="-1"><a class="header-anchor" href="#正常模式" aria-hidden="true">#</a> 正常模式</h3><p>可以进行删除、复制、粘贴等动作，但无法增加或修改文件内容.</p><p>基本语法</p><table><thead><tr><th>语法</th><th>功能描述</th></tr></thead><tbody><tr><td>yy</td><td>复制光标当前一行</td></tr><tr><td>y 数字 y | 数字 yy</td><td>复制一段（从第几行到第几行）</td></tr><tr><td>y (shift + 4)</td><td>复制当前光标到结尾的字符串</td></tr><tr><td>p</td><td>粘贴到当前光标行</td></tr><tr><td>u</td><td>撤销上一步</td></tr><tr><td>dd</td><td>删除光标当前行</td></tr><tr><td>d 数字 d | 数字 dd</td><td>删除光标（含）后多少行</td></tr><tr><td>x</td><td>剪切一个字母，相当于 del</td></tr><tr><td>X</td><td>剪切一个字母，相当于 Backspace</td></tr><tr><td>w</td><td>切换到下一个词</td></tr><tr><td>e</td><td>快速到下一个词尾</td></tr><tr><td>d</td><td>跳转到上一个词</td></tr><tr><td>yw</td><td>复制一个词</td></tr><tr><td>dw</td><td>删除一个词</td></tr><tr><td>shift+6</td><td>移动到行头</td></tr><tr><td>shift+4</td><td>移动到行尾</td></tr><tr><td>gg</td><td>移动到页头</td></tr><tr><td>G /L</td><td>移动到页尾</td></tr><tr><td>数字+shift+g</td><td>移动到目标行</td></tr></tbody></table><h3 id="插入模式" tabindex="-1"><a class="header-anchor" href="#插入模式" aria-hidden="true">#</a> 插入模式</h3><p>在正常模式中可以进行删除、复制、粘贴，但是却无法编辑文件内容.</p><p>按下 <mark>i, I, o, O, a, A</mark> 中任何一个字母之后会进入编辑模式.</p><div class="custom-container tip"><p class="custom-container-title">提示</p><p>通常在 Linux 中，按下这些按键时，在画面的左下方会出现 <code>INSERT</code> 或 <code>REPLACE</code> 的字样，此时才可以进行编辑.</p><p>而如果要回到正常模式时， 则按下 <code>ESC</code> 键即可退出编辑模式.</p></div><p>基本语法</p><table><thead><tr><th>按钮</th><th>功能</th></tr></thead><tbody><tr><td>i</td><td>当前光标前</td></tr><tr><td>a</td><td>当前光标后</td></tr><tr><td>o</td><td>当前光标行的下一行</td></tr><tr><td>I</td><td>光标所在行最前</td></tr><tr><td>A</td><td>光标所在行租后</td></tr><tr><td>O</td><td>当前光标行的上一行</td></tr></tbody></table><p>退出编辑:</p><blockquote><p>按 <code>ESC</code> 键回到正常模式</p></blockquote><h3 id="命令行模式" tabindex="-1"><a class="header-anchor" href="#命令行模式" aria-hidden="true">#</a> 命令行模式</h3><p>在正常模式当中，输入 <code>:</code>, <code>/</code>, <code>?</code> 3 个中的任何一个就可以将光标移动到最底下的一行</p><p>基本语法</p><table><thead><tr><th>命令</th><th>功能</th></tr></thead><tbody><tr><td><code>:w</code></td><td>保存</td></tr><tr><td><code>:q</code></td><td>退出</td></tr><tr><td><code>:wq</code></td><td>保存并退出</td></tr><tr><td><code>:q!</code></td><td>不保存强制退出</td></tr><tr><td><code>/要查找的词</code></td><td>输入 n 查找下一个，N 往上查找</td></tr><tr><td><code>:noh</code></td><td>取消高亮显示</td></tr><tr><td><code>:set nu</code></td><td>显示行号</td></tr><tr><td><code>:set nonu</code></td><td>关闭显示行号</td></tr><tr><td><code>:s /old/new</code></td><td>替换当前行匹配到第一个 old 为 new</td></tr><tr><td><code>:s /lod/new/g</code></td><td>替换当前行匹配到所有 old 为 new</td></tr><tr><td><code>:%s/old/new</code></td><td>替换文档中每一行匹配到的第一个 old 为 new</td></tr><tr><td><code>:%s/old/new/g</code></td><td>替换文档中的所有的 old 为 new 比较常用</td></tr></tbody></table><h3 id="键盘图" tabindex="-1"><a class="header-anchor" href="#键盘图" aria-hidden="true">#</a> 键盘图</h3><p><img src="https://gcore.jsdelivr.net/gh/SurplusFate/guide_img@main/img/202210102047172.png" alt="image-20220512234008290"></p><h2 id="文件传输" tabindex="-1"><a class="header-anchor" href="#文件传输" aria-hidden="true">#</a> 文件传输</h2><h3 id="使用-rzsz" tabindex="-1"><a class="header-anchor" href="#使用-rzsz" aria-hidden="true">#</a> 使用 <code>rzsz</code></h3><p>在线安装 <code>rzsz</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>yum <span class="token parameter variable">-y</span> <span class="token function">install</span> lrzsz
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>文件上传：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>rz
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>输入命令 <code>rz</code>，回车，会弹出选择文件的窗口，双击要上传的文件，添加到上传列表，可以一次上传多个文件，点击 OK 开始上传</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>sz 文件名
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>输入命令 <code>sz</code> 文件... 回车即可</p><h3 id="使用-xftp" tabindex="-1"><a class="header-anchor" href="#使用-xftp" aria-hidden="true">#</a> 使用 <code>XFTP</code></h3><p><code>xftp</code> 和 <code>xhell</code> 是互通的</p><p><img src="https://gcore.jsdelivr.net/gh/SurplusFate/guide_img@main/img/202210102049020.png" alt="image-20220929133438056"></p><p>单独安装和 <code>xhell</code> 一样配置一下也行</p><p><img src="https://gcore.jsdelivr.net/gh/SurplusFate/guide_img@main/img/202210102049512.png" alt="image-20220929133652015"></p><p>如果文件出现乱码可手动设置编码格式</p><p><img src="https://gcore.jsdelivr.net/gh/SurplusFate/guide_img@main/img/202210102049084.png" alt="image-20220929134208457"></p><p><img src="https://gcore.jsdelivr.net/gh/SurplusFate/guide_img@main/img/202210102049242.png" alt="image-20220929134216613"></p><h2 id="帮助命令" tabindex="-1"><a class="header-anchor" href="#帮助命令" aria-hidden="true">#</a> 帮助命令</h2><h3 id="man" tabindex="-1"><a class="header-anchor" href="#man" aria-hidden="true">#</a> <code>man</code></h3><p>基本语法</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">man</span> <span class="token punctuation">[</span>命令或配置文件<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>查看 <code>ls</code> 命令帮助信息, 空格或者上下键翻页</p><div class="language-shel line-numbers-mode" data-ext="shel"><pre class="language-shel"><code>man ls
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>显示说明</p><table><thead><tr><th>信息</th><th>功能</th></tr></thead><tbody><tr><td>NAME</td><td>命令的名称和单行描述</td></tr><tr><td>SYNOPSIS</td><td>怎样使用命令</td></tr><tr><td>DESCRIPTION</td><td>命令功能的深入讨论</td></tr><tr><td>EXAMPLES</td><td>怎样使用命令的例子</td></tr><tr><td>SEE ALSO</td><td>相关主题（通常是手册页）</td></tr></tbody></table><h3 id="help" tabindex="-1"><a class="header-anchor" href="#help" aria-hidden="true">#</a> <code>help</code></h3><p>获取 <code>shell</code> 内置命令帮助信息</p><p>判断 <code>cd</code> 是否为内置命令</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">type</span> <span class="token builtin class-name">cd</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>cd is a shell builtin</p></blockquote><p>基本语法</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">help</span> 命令
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>查看 cd 命令的帮助信息</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">help</span> <span class="token builtin class-name">cd</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="history" tabindex="-1"><a class="header-anchor" href="#history" aria-hidden="true">#</a> <code>history</code></h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 查看历史命令</span>
<span class="token function">history</span>
<span class="token comment"># 查看最近 10 条</span>
<span class="token function">history</span> <span class="token number">10</span>
<span class="token comment"># 执行历史编号为 1 的指令</span>
<span class="token operator">!</span><span class="token number">1</span>
<span class="token comment"># 清空历史命令</span>
<span class="token function">history</span> <span class="token parameter variable">-c</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="常用快捷键" tabindex="-1"><a class="header-anchor" href="#常用快捷键" aria-hidden="true">#</a> 常用快捷键</h3><table><thead><tr><th>常用快捷键</th><th>功能</th></tr></thead><tbody><tr><td>ctrl + c</td><td>停止进程</td></tr><tr><td>ctrl + l</td><td>清屏，等同于 clear;彻底清屏是： reset</td></tr><tr><td>tab</td><td>提示（更重要的是可以防止敲错）</td></tr><tr><td>上下键</td><td>查找执行过的命令</td></tr></tbody></table><h2 id="文件目录类" tabindex="-1"><a class="header-anchor" href="#文件目录类" aria-hidden="true">#</a> 文件目录类</h2><h3 id="pwd-显示绝对路径" tabindex="-1"><a class="header-anchor" href="#pwd-显示绝对路径" aria-hidden="true">#</a> <code>pwd</code> 显示绝对路径</h3><p>pwd: print working directory 打印工作目录</p><p>基本语法</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">pwd</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="ls-列出目录的内容" tabindex="-1"><a class="header-anchor" href="#ls-列出目录的内容" aria-hidden="true">#</a> <code>ls</code> 列出目录的内容</h3><p>ls: list 列出目录内容</p><p>基本语法</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">ls</span> <span class="token punctuation">[</span>选项<span class="token punctuation">]</span> <span class="token punctuation">[</span>文件或目录<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>选项说明</p><table><thead><tr><th>选项</th><th>功能</th></tr></thead><tbody><tr><td>-a</td><td>全部的文件，连同隐藏文档（开头为.的文件） 一起</td></tr><tr><td>-l</td><td>长数据串列出，包含文件的属性与权限等等数据（常用）等价于“ll”</td></tr><tr><td>-h</td><td>与-l 一起，以易于阅读的格式输出文件大小 (例如 1K 234M 2G)</td></tr><tr><td>-i</td><td>查看文件索引</td></tr></tbody></table><p>显示说明</p><blockquote><p>每行列出的信息依次是：文件类型与权限 链接户 文件属性 文件大小用 byte 来标识 建立或最近修改的时间 名字</p></blockquote><p>查看隐藏文件(linux 以 <code>.</code> 开头的文件)</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">ls</span> <span class="token parameter variable">-a</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>单列输出</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">ls</span> <span class="token parameter variable">-l</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>参数组合(无顺序要求)</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">ls</span> <span class="token parameter variable">-al</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>查看 <code>root</code> 目录下的所有文件并单列显示</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">ls</span> <span class="token parameter variable">-la</span> /root
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>查看文件索引</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">ls</span> <span class="token parameter variable">-i</span> 文件名
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="cd-切换目录" tabindex="-1"><a class="header-anchor" href="#cd-切换目录" aria-hidden="true">#</a> <code>cd</code> 切换目录</h3><p>cd Change Directory 切换目录</p><table><thead><tr><th>参数</th><th>功能</th></tr></thead><tbody><tr><td>cd 绝对路径</td><td>切换路径</td></tr><tr><td>cd 相对路径</td><td>切换路径</td></tr><tr><td>cd ~ 或 cd</td><td>回到自己的家目录</td></tr><tr><td>cd -</td><td>回到上一次所在目录</td></tr><tr><td>cd ..</td><td>回到当前目录的上一级目录</td></tr><tr><td>cd -P</td><td>跳转到实际物理路径，而非快捷方式路径</td></tr></tbody></table><h3 id="mkdir-创建一个新的目录" tabindex="-1"><a class="header-anchor" href="#mkdir-创建一个新的目录" aria-hidden="true">#</a> <code>mkdir</code> 创建一个新的目录</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 创建目录</span>
<span class="token function">mkdir</span> a

<span class="token comment"># 创建多级</span>
<span class="token function">mkdir</span> a a/b a/b/c

<span class="token comment"># 一次创建三个</span>
<span class="token function">mkdir</span> <span class="token parameter variable">-p</span> a/b/c
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="rmdir-删除一个空的目录" tabindex="-1"><a class="header-anchor" href="#rmdir-删除一个空的目录" aria-hidden="true">#</a> <code>rmdir</code> 删除一个空的目录</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 删除空目录</span>
<span class="token function">rmdir</span> a

<span class="token comment"># 删除多级空目录</span>
<span class="token function">rmdir</span> a/b/c
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>非空目录需要使用 <code>rm</code> 指令.</p></blockquote><h3 id="touch-创建空文件" tabindex="-1"><a class="header-anchor" href="#touch-创建空文件" aria-hidden="true">#</a> <code>touch</code> 创建空文件</h3><p>基本语法</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">touch</span> 文件名称
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="cp-复制文件或目录" tabindex="-1"><a class="header-anchor" href="#cp-复制文件或目录" aria-hidden="true">#</a> <code>cp</code> 复制文件或目录</h3><p>基本语法</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">cp</span> <span class="token punctuation">[</span>选项<span class="token punctuation">]</span> <span class="token builtin class-name">source</span> dest
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>复制 <code>ngin.conf</code> 并重命名为 <code>nginx.conf2</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">cp</span> nginx.conf nginx.conf2
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>复制当前目录下的 <code>hello.txt</code> 到 <code>bbb</code> 子目录下</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">cp</span> hello.txt bbb/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>递归复制整个文件夹</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">cp</span> <span class="token parameter variable">-r</span> logs logs2
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>强制覆盖</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">\\</span>cp <span class="token parameter variable">-r</span> logs logs2
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="alias-查看命令缩写" tabindex="-1"><a class="header-anchor" href="#alias-查看命令缩写" aria-hidden="true">#</a> <code>alias</code> 查看命令缩写</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">alias</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>结果</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">alias</span> <span class="token assign-left variable">cp</span><span class="token operator">=</span><span class="token string">&#39;cp -i&#39;</span>
<span class="token builtin class-name">alias</span> <span class="token assign-left variable">egrep</span><span class="token operator">=</span><span class="token string">&#39;egrep --color=auto&#39;</span>
<span class="token builtin class-name">alias</span> <span class="token assign-left variable">fgrep</span><span class="token operator">=</span><span class="token string">&#39;fgrep --color=auto&#39;</span>
<span class="token builtin class-name">alias</span> <span class="token assign-left variable">grep</span><span class="token operator">=</span><span class="token string">&#39;grep --color=auto&#39;</span>
<span class="token builtin class-name">alias</span> l.<span class="token operator">=</span><span class="token string">&#39;ls -d .* --color=auto&#39;</span>
<span class="token builtin class-name">alias</span> <span class="token assign-left variable">ll</span><span class="token operator">=</span><span class="token string">&#39;ls -l --color=auto&#39;</span>
<span class="token builtin class-name">alias</span> <span class="token assign-left variable">ls</span><span class="token operator">=</span><span class="token string">&#39;ls --color=auto&#39;</span>
<span class="token builtin class-name">alias</span> <span class="token assign-left variable">mv</span><span class="token operator">=</span><span class="token string">&#39;mv -i&#39;</span>
<span class="token builtin class-name">alias</span> <span class="token assign-left variable">rm</span><span class="token operator">=</span><span class="token string">&#39;rm -i&#39;</span>
<span class="token builtin class-name">alias</span> <span class="token assign-left variable">which</span><span class="token operator">=</span><span class="token string">&#39;alias | /usr/bin/which --tty-only --read-alias --show-dot --show-tilde&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="rm-删除文件或目录" tabindex="-1"><a class="header-anchor" href="#rm-删除文件或目录" aria-hidden="true">#</a> <code>rm</code> 删除文件或目录</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">rm</span> <span class="token punctuation">[</span>选项<span class="token punctuation">]</span> deleteFile
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>递归删除目录中所有内容</p><table><thead><tr><th>选项</th><th>功能</th></tr></thead><tbody><tr><td>-r</td><td>递归删除目录中所有内容</td></tr><tr><td>-f</td><td>强制执行删除操作，而不提示用于进行确认</td></tr><tr><td>-v</td><td>显示指令的详细执行过程</td></tr></tbody></table><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#删除文件</span>
<span class="token function">rm</span> test.txt
<span class="token comment"># 递归删除</span>
<span class="token function">rm</span> <span class="token parameter variable">-r</span> <span class="token function">dir</span>
<span class="token comment"># 强制删除</span>
<span class="token function">rm</span> <span class="token parameter variable">-f</span> <span class="token function">dir</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>高危命令</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">rm</span> <span class="token parameter variable">-rf</span> <span class="token function">dir</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>该命令删除不需要确认! 谨慎使用.</p></blockquote><h3 id="mv-移动文件或目录或重命名" tabindex="-1"><a class="header-anchor" href="#mv-移动文件或目录或重命名" aria-hidden="true">#</a> <code>mv</code> 移动文件或目录或重命名</h3><p>重命名</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">mv</span> oldNameFile newNameFile
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>移动文件</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">mv</span> /tmp/moveFile /targerFolder
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>移动并改名</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">mv</span> /tmp/oldNameFile /targerFolder/newNameFile
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>移动整个目录, 将 <code>/obt/bbb</code> 移动到 <code>/home</code> 下</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">mv</span> /obt/bbb /home
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="cat-查看文件内容" tabindex="-1"><a class="header-anchor" href="#cat-查看文件内容" aria-hidden="true">#</a> <code>cat</code> 查看文件内容</h3><p>只能看不能修改</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">cat</span> <span class="token punctuation">[</span>选项<span class="token punctuation">]</span> 要查看的文件
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>显示所有行的行号，包括空行</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">cat</span> <span class="token parameter variable">-n</span> 文件名
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="more-文件内容分屏查看器" tabindex="-1"><a class="header-anchor" href="#more-文件内容分屏查看器" aria-hidden="true">#</a> <code>more</code> 文件内容分屏查看器</h3><p><code>more</code> 指令是一个基于 VI 编辑器的文本过滤器，它以全屏幕的方式按页显示文本文件的内容，more 指令中内置若干快捷键</p><table><thead><tr><th>操作</th><th>功能说</th></tr></thead><tbody><tr><td>空白键（space）</td><td>代表向下翻一页</td></tr><tr><td>Enter</td><td>代表向下翻一行</td></tr><tr><td>q</td><td>立刻离开 more</td></tr><tr><td>ctrl + F</td><td>向下滚动一屏</td></tr><tr><td>ctrl + B</td><td>返回上一屏</td></tr><tr><td>=</td><td>输出当前行的行号</td></tr><tr><td>:f</td><td>输出文件名和当前行行号</td></tr></tbody></table><p>单独使用</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">more</span> fileName
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>结合 <code>cat</code> 查看</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">cat</span> <span class="token parameter variable">-n</span> /etc/profile <span class="token operator">|</span> <span class="token function">more</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="less-分屏显示文件内容-查看大文件" tabindex="-1"><a class="header-anchor" href="#less-分屏显示文件内容-查看大文件" aria-hidden="true">#</a> <code>less</code> 分屏显示文件内容（查看大文件）</h3><p><code>less</code> 指令用来分屏查看文件内容，它的功能与 <code>more</code> 指令类似，但是比 <code>more</code> 指令更加强大，支持各种显示终端。</p><p><code>less</code> 指令在显示文件内容时，不是一次将整个文件加载之后才显示，而是根据显示需要加载内容，对于显示大型文件具有较高的效率。</p><p>基本语法</p><div class="language-sehll line-numbers-mode" data-ext="sehll"><pre class="language-sehll"><code>less 文件名
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>快捷键</p><table><thead><tr><th>操作</th><th>功能说明</th></tr></thead><tbody><tr><td>空白键</td><td>向下翻动一页</td></tr><tr><td>pagedown</td><td>向下翻动一页</td></tr><tr><td>pageup</td><td>向上翻动一页</td></tr><tr><td>/字符串</td><td>向下搜寻【字符串】的功能：n:向下查找; N:向上查找</td></tr><tr><td>？字符串</td><td>向上搜寻【字符串】的功能：n:向上查找; N:向下查找</td></tr><tr><td>q</td><td>离开 less 这个程序</td></tr></tbody></table><h3 id="echo-输出" tabindex="-1"><a class="header-anchor" href="#echo-输出" aria-hidden="true">#</a> <code>echo</code> 输出</h3><p>echo 输出内容到控制台</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">echo</span> 【选项】【输出内容】
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>-e: 支持反斜线控制的字符转换</p></blockquote><table><thead><tr><th>控制字符</th><th>作业</th></tr></thead><tbody><tr><td>\\</td><td>输出\\本身</td></tr><tr><td>\\n</td><td>换行符</td></tr><tr><td>\\t</td><td>制表符，也就是 Tab 键</td></tr></tbody></table><p>控制台输出 <code>helloworld</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">echo</span> helloworld
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>控制台输出 <code>PATH</code> 变量</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">echo</span> <span class="token environment constant">$PATH</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>控制台输出所有系统环境变量</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">echo</span> $ + 两次Tab键
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="head-显示文件头部内容" tabindex="-1"><a class="header-anchor" href="#head-显示文件头部内容" aria-hidden="true">#</a> <code>head</code> 显示文件头部内容</h3><p><code>head</code> 用于显示文件的开头部门内容，默认情况下 <code>head</code> 指令显示文件的前 10 行内容。</p><p>基本语法</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">head</span> 文件名
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>查看文件头 5 行内容</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">head</span> <span class="token parameter variable">-n</span> <span class="token number">5</span> 文件名
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="tail-显示文件尾部内容" tabindex="-1"><a class="header-anchor" href="#tail-显示文件尾部内容" aria-hidden="true">#</a> <code>tail</code> 显示文件尾部内容</h3><p>基本语法</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">tail</span> 文件名
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>查看文件尾 5 行内容</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">tail</span> <span class="token parameter variable">-n</span> <span class="token number">5</span> 文件名
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>实时追踪该文档的所有更新</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">tail</span> <span class="token parameter variable">-f</span> 文件
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><p>按 Ctrl + S 可以暂停监听</p></li><li><p>按 Ctrl + Q 可以继续监听</p></li></ul><h3 id="输出重定向和追加" tabindex="-1"><a class="header-anchor" href="#输出重定向和追加" aria-hidden="true">#</a> 输出重定向和追加</h3><p>列表的内容写入文件 a.txt 中（<strong>覆盖写</strong>）, 如果文件不存在会自动创建.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">ls</span> <span class="token parameter variable">-l</span> <span class="token operator">&gt;</span> a.txt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>列表的内容<strong>追加</strong>到文件 aa.txt 的末尾</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">ls</span> <span class="token parameter variable">-al</span> <span class="token operator">&gt;&gt;</span> aa.txt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>将文件 1 的内容覆盖到文件 2</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">cat</span> 文件 <span class="token number">1</span> <span class="token operator">&gt;</span> 文件 <span class="token number">2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>输出到文件</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">echo</span> “内容” <span class="token operator">&gt;&gt;</span> 文件
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="ln-软链接" tabindex="-1"><a class="header-anchor" href="#ln-软链接" aria-hidden="true">#</a> <code>ln</code> 软链接</h3><p>软链接（link）也称为符号链接，类似于 windows 里的快捷方式，有自己的数据块，主要存放了连接其他文件的路径</p><p>基本语法</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">ln</span> <span class="token parameter variable">-s</span> <span class="token punctuation">[</span>原文件或目录<span class="token punctuation">]</span> <span class="token punctuation">[</span>软链接名<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>创建一个软链接</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">ln</span> <span class="token parameter variable">-s</span> web.log web
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>ll</code> 命令查看</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>total <span class="token number">7988</span>
-rw-r--r-- <span class="token number">1</span> root root  <span class="token number">115498</span> May <span class="token number">13</span> <span class="token number">11</span>:04 gateway.log
lrwxrwxrwx <span class="token number">1</span> root root       <span class="token number">7</span> May <span class="token number">16</span> 00:36 web -<span class="token operator">&gt;</span> web.log <span class="token comment"># 软连接的前缀为l</span>
-rw-r--r-- <span class="token number">1</span> root root <span class="token number">8048944</span> May <span class="token number">16</span> 00:36 web.log
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>直接进入软连接对应的地址</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> <span class="token parameter variable">-P</span> 软连接
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>删除软连接</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code> <span class="token function">rm</span> <span class="token parameter variable">-rf</span> 软连接名
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>而不是 <code>rm -rf 软连接名/</code></p></blockquote><p><strong>!!! 如果使用 rm -rf 软连接/ 删除，会把软连接对应的真实目录下内容删掉!</strong></p><h3 id="find-查找" tabindex="-1"><a class="header-anchor" href="#find-查找" aria-hidden="true">#</a> <code>find</code> 查找</h3><p>find 指令将从指定目录向下递归遍历其各个子目录, 将满足条件的文件或目录显示在终端.</p><p>基本语法</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">find</span> <span class="token punctuation">[</span>搜索范围<span class="token punctuation">]</span> <span class="token punctuation">[</span>选项<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>选项说明</p><table><thead><tr><th>选项</th><th>功能</th></tr></thead><tbody><tr><td>-name &lt;查询方式&gt;</td><td>按照指定的文件名查找</td></tr><tr><td>-user &lt;用户名&gt;</td><td>查找属于指定用户的文件</td></tr><tr><td>-size &lt;文件大小&gt;</td><td>按照文件大小查找</td></tr></tbody></table><p>查找当前文件夹下是否有 <code>Hello.java</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">find</span> <span class="token parameter variable">-name</span> Hello.java
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>通配符查找</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">find</span> <span class="token parameter variable">-name</span> H*
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>查找当前文件夹下是否有 admin 用户的文件</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">find</span> <span class="token parameter variable">-user</span> admin
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>文件过多可以配合 <code>more</code> 命令</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">find</span> <span class="token parameter variable">-user</span> admin <span class="token operator">|</span> <span class="token function">more</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="whereis-查找" tabindex="-1"><a class="header-anchor" href="#whereis-查找" aria-hidden="true">#</a> <code>whereis</code> 查找</h3><p><strong>whereis命令</strong> 用来定位指令的二进制程序、源代码文件和man手册页等相关文件的路径。</p><p>whereis命令只能用于程序名的搜索，而且只搜索二进制文件（参数-b）、man说明文件（参数-m）和源代码文件（参数-s）。如果省略参数，则返回所有信息。</p><p>和find相比，whereis查找的速度非常快，这是因为linux系统会将 系统内的所有文件都记录在一个数据库文件中，当使用whereis和下面即将介绍的locate时，会从数据库中查找数据，而不是像find命令那样，通 过遍历硬盘来查找，效率自然会很高。 但是该数据库文件并不是实时更新，默认情况下时一星期更新一次，因此，我们在用whereis和locate 查找文件时，有时会找到已经被删除的数据，或者刚刚建立文件，却无法查找到，原因就是因为数据库文件没有被更新。</p><p>更新指令</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>updatedb
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>wehereis</code> 基本语法</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>whereis<span class="token punctuation">(</span>选项<span class="token punctuation">)</span><span class="token punctuation">(</span>参数<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>-b：只查找二进制文件； -B&lt;目录&gt;：只在设置的目录下查找二进制文件； -f：不显示文件名前的路径名称； -m：只查找说明文件； -M&lt;目录&gt;：只在设置的目录下查找说明文件； -s：只查找原始代码文件； -S&lt;目录&gt;只在设置的目录下查找原始代码文件； -u：查找不包含指定类型的文件。</p></blockquote><p>指令名：要查找的二进制程序、源文件和man手册页的指令名。</p><p>例如:</p><p>将相关的文件都查找出来</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># whereis tomcat</span>
tomcat:

<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># whereis svn</span>
svn: /usr/bin/svn /usr/local/svn /usr/share/man/man1/svn.1.gz
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>说明：tomcat没安装，找不出来，svn安装找出了很多相关文件</p><p>只将二进制文件查找出来</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># whereis -b svn</span>
svn: /usr/bin/svn /usr/local/svn

<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># whereis -m svn</span>
svn: /usr/share/man/man1/svn.1.gz

<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># whereis -s svn</span>
svn:
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>说明：<code>whereis -m svn</code>查出说明文档路径，<code>whereis -s svn</code>找source源文件。</p><h3 id="locate-查找" tabindex="-1"><a class="header-anchor" href="#locate-查找" aria-hidden="true">#</a> <code>locate</code> 查找</h3><p><code>locate</code> 指令可以快速定位文件路径, <code>locate</code> 指令利用事先建立的系统中所有文件名称以及路径的 <code>locate</code> 数据库实现快速定位给定的文件.</p><p><code>locate</code> 指令无需遍历整个文件系统, 查询速度较快.为了保证查询结果准确, 管理员需要定期更新 <code>locate</code> 时刻.</p><p>基本语法</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">locate</span> 搜索文件
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>第一次运行前需要使用 <code>updatedb</code> 指令创建 <code>locate</code> 数据库</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>updatedb
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="which-查找" tabindex="-1"><a class="header-anchor" href="#which-查找" aria-hidden="true">#</a> which 查找</h3><p>which 指令可以查看某个指令在哪个目录下.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@Linux admin<span class="token punctuation">]</span><span class="token comment"># which ls</span>
<span class="token builtin class-name">alias</span> <span class="token assign-left variable">ls</span><span class="token operator">=</span><span class="token string">&#39;ls --color=auto&#39;</span>
 /usr/bin/ls
<span class="token punctuation">[</span>root@Linux admin<span class="token punctuation">]</span><span class="token comment">#</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查看 which 本身</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@Linux admin<span class="token punctuation">]</span><span class="token comment"># which which</span>
<span class="token builtin class-name">alias</span> <span class="token assign-left variable">which</span><span class="token operator">=</span><span class="token string">&#39;alias | /usr/bin/which --tty-only --read-alias --show-dot --show-tilde&#39;</span>
 /usr/bin/alias
 /usr/bin/which
<span class="token punctuation">[</span>root@Linux admin<span class="token punctuation">]</span><span class="token comment">#</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="grep-查找" tabindex="-1"><a class="header-anchor" href="#grep-查找" aria-hidden="true">#</a> grep 查找</h3><p><code>grep</code> 通常配合其他查询命令和管道符 <code>|</code> 使用.</p><p>基本语法</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">grep</span> <span class="token punctuation">[</span>选项<span class="token punctuation">]</span> 查找内容 源文件
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>常用选项</p><table><thead><tr><th>选项</th><th>功能</th></tr></thead><tbody><tr><td>-n</td><td>显示匹配行及行号</td></tr><tr><td>-i</td><td>忽略字母大小写</td></tr></tbody></table><p>假如要查找 hello.txt 文件中的 &quot;yes&quot; 字符串.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">cat</span> hello.txt <span class="token operator">|</span> <span class="token function">grep</span> <span class="token string">&quot;yes&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>显示行号</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">cat</span> hello.txt <span class="token operator">|</span> <span class="token function">grep</span> <span class="token parameter variable">-n</span> <span class="token string">&quot;yes&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>第二种写法:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">grep</span> <span class="token parameter variable">-n</span> <span class="token string">&quot;yes&quot;</span> hello.txt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="压缩和解压" tabindex="-1"><a class="header-anchor" href="#压缩和解压" aria-hidden="true">#</a> 压缩和解压</h3><h4 id="gzip-和-gunzip-指令" tabindex="-1"><a class="header-anchor" href="#gzip-和-gunzip-指令" aria-hidden="true">#</a> <code>gzip</code> 和 <code>gunzip</code> 指令</h4><p>基本语法</p><p>压缩文件, 只能压缩成 *.gz 文件</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">gzip</span> 文件
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>解压文件</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>gunzip 文件.gz
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>压缩 hello.txt</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">gzip</span> hello.txt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>解压</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>gunzip hello.txt.gz
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="zip-和-unzip-指令" tabindex="-1"><a class="header-anchor" href="#zip-和-unzip-指令" aria-hidden="true">#</a> <code>zip</code> 和 <code>unzip</code> 指令</h4><p><code>zip</code> 用于压缩文件, <code>unzip</code> 用于解压</p><p>基本语法</p><p>压缩</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">zip</span> <span class="token punctuation">[</span>选项<span class="token punctuation">]</span> *.zip 需要压缩的内容<span class="token punctuation">(</span>文件或目录<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>解压</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">unzip</span> <span class="token punctuation">[</span>选项<span class="token punctuation">]</span> *.zip
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>zip</code> 常用选项</p><blockquote><p>-r: 递归压缩, 即压缩目录</p></blockquote><p><code>unzip</code> 常用选项</p><blockquote><p>-d&lt;目录&gt;: 指定解压后的文件存放的目录</p></blockquote><p>压缩整个 /<code>home</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">zip</span> <span class="token parameter variable">-r</span> home.zip /home
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>将 <code>home.zip</code> 解压 到 /opt/tmp</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">unzip</span> <span class="token parameter variable">-d</span> /opt/tmp home.zip
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="tar-指令" tabindex="-1"><a class="header-anchor" href="#tar-指令" aria-hidden="true">#</a> tar 指令</h4><p>将文件打包成 <code>*.tar.gz</code> 文件</p><p>基本语法</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">tar</span> <span class="token punctuation">[</span>选项<span class="token punctuation">]</span> *.tar.gz 打包内容
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>选项说明</p><table><thead><tr><th>选项</th><th>功能</th></tr></thead><tbody><tr><td>-c</td><td>产生.tar 打包文件</td></tr><tr><td>-v</td><td>显示详细信息</td></tr><tr><td>-f</td><td>指定压缩后的文件名</td></tr><tr><td>-z</td><td>打包同时压缩</td></tr><tr><td>-x</td><td>解压.tar 文件</td></tr></tbody></table><p>将多个文件压缩成 tar.gz</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">tar</span> <span class="token parameter variable">-zcvf</span> pc.tar.gz /home/pig.txt /home/cat.txt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>压缩 <code>/home</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">tar</span> <span class="token parameter variable">-zcvf</span> myhome.tar.gz /home
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>解压 <code>pc.tar.gz</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">tar</span> <span class="token parameter variable">-zxvf</span> pc.tar.gz
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>解压 <code>myhome.tar.gz</code> 到 /opt/tmp2</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">tar</span> <span class="token parameter variable">-zxvf</span> /home/myhome.tar.gz <span class="token parameter variable">-C</span> /opt/tmp2
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,304),i=[t];function l(r,c){return e(),s("div",null,i)}const u=a(d,[["render",l],["__file","2. 文件管理.html.vue"]]);export{u as default};
