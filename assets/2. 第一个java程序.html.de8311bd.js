import{_ as i}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as c,c as p,a as s,b as a,d as e,e as t,r as o}from"./app.5992c092.js";const l={},d=t(`<h1 id="_2-第一个-java-程序" tabindex="-1"><a class="header-anchor" href="#_2-第一个-java-程序" aria-hidden="true">#</a> 2. 第一个 java 程序</h1><h2 id="编写" tabindex="-1"><a class="header-anchor" href="#编写" aria-hidden="true">#</a> 编写</h2><p>编辑 Java 源代码可以使用任何无格式的文本编辑器，在 Windows 操作系统上可使用记事本（NotePad）、EditPlus 等程序。</p><div class="custom-container warning"><p class="custom-container-title">注意</p><p>编写 Java 程序不要使用写字板，更不可使用 Word 等文档编辑器。因为写字板、Word 等工具是有格式的编辑器，当使用它们编辑一份文档时，这个文档中会包含一些隐藏的格式化字符，这些隐藏字符会导致程序无法正常编译、运行。</p></div><p>在记事本中新建一个文本文件，并在该文件中输入如下代码：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HelloWorld</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Hello World&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>必须注意的几个问题：</p><ol><li>Java 程序严格区分大小写。</li><li>程序格式的标点符号必须是英文。</li><li>拼写不能有任何错误。</li><li>文件名必须和类名一致。</li><li>文件后缀必须是 java</li></ol><p>win11 显示文件后缀名方法：打开资源管理器、点击查看、显示、文件拓展名。</p><p><img src="https://gcore.jsdelivr.net/gh/SurplusFate/guide_img@main/img/202206071628292.png" alt="image-20220602202526556"></p><p>将上面文本文件保存为 HelloWorld.java（必须是这个名字），该文件就是 Java 程序的源程序。</p><p>编写好 Java 程序的源代码后，接下来就应该编译该 Java 源文件来生成字节码了。</p><h2 id="编译" tabindex="-1"><a class="header-anchor" href="#编译" aria-hidden="true">#</a> 编译</h2><p>先进入源代码存放路径，然后在路径内输入<code>cmd</code>后回车直接定位到本路径，免去了频繁切换路径的麻烦。</p><p><img src="https://gcore.jsdelivr.net/gh/SurplusFate/guide_img@main/img/202205162139161.png" alt="image-20220516213908114"></p><p>在 cmd 中键入 <code>javac HelloWorld.java</code> 开始编译源码。</p><p>编译成功后<code>cmd</code>不会有任何提示。</p><p><img src="https://gcore.jsdelivr.net/gh/SurplusFate/guide_img@main/img/202206071628252.png" alt="image-20220516213926925"></p><p>在文件夹中会出现编译完成后的 class 文件。</p><p><img src="https://gcore.jsdelivr.net/gh/SurplusFate/guide_img@main/img/202206071628843.png" alt="image-20220516214015803"></p><h2 id="运行" tabindex="-1"><a class="header-anchor" href="#运行" aria-hidden="true">#</a> 运行</h2><p>接着在 <code>cmd</code> 中键入 <code>java HelloWorld</code> 回车运行 class 文件，将会得到我们的第一个 java 程序，只有一句话。</p><p><img src="https://gcore.jsdelivr.net/gh/SurplusFate/guide_img@main/img/202205162140633.png" alt="image-20220516214036533"></p><div class="custom-container tip"><p class="custom-container-title">提示</p><p>新手常见错误：</p><ol><li>没有区分大小写，Java 严格区分大小写。</li><li>单词拼错。</li><li>源码里面有错误的中文符号，java 程序中的中文符号只允许出现在 <code>String</code> 类型中。</li><li>源代码文件名与公共类名字不同。</li><li>拓展名不对。</li></ol></div><p>运行已编译的程序时，Java 虚拟机将从指定类中的 main 方法开始执行，因此为了代码能够执行，在类的源文件中必须包含一个 main 方法。当然，也可以将用户自定义的方法添加到类中，并且在 main 方法中调用它们。</p>`,25),r={class:"custom-container info"},u=s("p",{class:"custom-container-title"},"相关信息",-1),v={href:"http://docs.oracle.com/javase/specs",target:"_blank",rel:"noopener noreferrer"},m={href:"http://bugs.java.com/bugdatabase/index.jsp",target:"_blank",rel:"noopener noreferrer"},g={href:"http://docs.oracle.com/javase/specs/jvms/se8/html",target:"_blank",rel:"noopener noreferrer"},h=s("p",null,"在 Java SE 1.4 及以后的版本中强制 main 方法是 public 的。",-1),k=t(`<h2 id="注意事项" tabindex="-1"><a class="header-anchor" href="#注意事项" aria-hidden="true">#</a> 注意事项</h2><p>需要注意源代码中的大括号<code>{}</code>。在 Java 中，用大括号划分程序的各个部分（通常称为块），每个代码块都是一个单独的作用域。Java 中任何方法的代码都用<code>{</code>开始，用<code>}</code>结束。</p><p>我们暂且不去理睬关键字 static void，而仅把它们当作编译 Java 应用程序必要的部分就行了。现在需要记住：每个 Java 应用程序都必须有一个 main 方法，其声明格式如下所示：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ClassName</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// program statements</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Java 程序是一种纯粹的面向对象的程序设计语言，因此 Java 程序必须以类（class）的形式存在，类（class）是 Java 程序的最小程序单位。</p><p>最简单的 Java 程序：最简单的 Java 程序是只包含一个空类定义的程序。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Test</span> <span class="token punctuation">{</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用 javac 命令来编译这个程序，这个程序可以通过编译，没有任何问题。</p><p>但如果使用 java 命令来运行上面的 Test 类，则会得到如下错误提示：</p><p><img src="https://gcore.jsdelivr.net/gh/SurplusFate/guide_img@main/img/202206071628227.png" alt="image-20220516214052669"></p><p>上面的错误提示仅仅表明：这个类不能被 java 命令解释执行，并不表示这个类是错误的。</p><p>Java 解释器规定：如需某个类能被解释器直接解释执行，则这个类里必须包含 main 方法，而且 main 方法必须使用 <code>public static void</code> 来修饰，且 main 方法的形参必须是字符串数组类型（<code>String[]args</code> 是字符串数组的形式）。</p><p>main 方法的写法几乎是固定的。main 方法是 Java 程序的入口。</p>`,13);function _(b,j){const n=o("ExternalLinkIcon");return c(),p("div",null,[d,s("div",r,[u,s("p",null,[a("根据 Java 语言规范，main 方法必须声明为 public（Java 语言规范是描述 Java 语言的官方文档。可以从网站："),s("a",v,[a("http://docs.oracle.com/javase/specs"),e(n)]),a(" 上阅读或下载）。")]),s("p",null,[a("不过，当 main 方法不是 public 时，有些版本的 Java 解释器也可以执行 Java 应用程序。有个程序员报告了这个 bug。如果感兴趣的话，可以在网站："),s("a",m,[a("http://bugs.java.com/bugdatabase/index.jsp"),e(n)]),a(" 上输入 bug 号码 4252539 查看。")]),s("p",null,[a("这个 bug 被标明“关闭，不予修复。”Sun 公司的工程师解释说：Java 虚拟机规范（在 "),s("a",g,[a("http://docs.oracle.com/javase/specs/jvms/se8/html"),e(n)]),a(" ）并没有要求 main 方法一定是 public，并且“修复这个 bug 有可能带来其他的隐患”。")]),h]),k])}const x=i(l,[["render",_],["__file","2. 第一个java程序.html.vue"]]);export{x as default};
