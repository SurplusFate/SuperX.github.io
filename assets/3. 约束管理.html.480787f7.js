import{_ as s}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as a,c as n,e}from"./app.576b6d73.js";const p={},o=e(`<h1 id="_3-约束管理" tabindex="-1"><a class="header-anchor" href="#_3-约束管理" aria-hidden="true">#</a> 3. 约束管理</h1><p>约束的作用：</p><p>确保数据的完整性：数据的一致性和正确性。</p><p>约束分类：</p><ul><li><p>单列约束：每个约束只约束一列。</p></li><li><p>多列约束：每个约束约束多列数据。</p></li></ul><p>MySQL 中常用的六类约束：</p><ol><li><p>主键约束</p><p>主键约束是使用最频繁的约束。在设计数据表时，一般情况下，都会要求表中设置一个主键。</p><p>主键是表的一个特殊字段，该字段能唯一标识该表中的每条信息。例如，学生信息表中的学号是唯一的。</p></li><li><p>外键约束</p><p>外键约束经常和主键约束一起使用，用来确保数据的一致性。</p><p>例如，一个水果摊，只有苹果、桃子、李子、西瓜 4 种水果，那么，你来到水果摊要买水果只能选择苹果、桃子、李子和西瓜，不能购买其它的水果。</p></li><li><p>唯一约束</p><p>唯一约束与主键约束有一个相似的地方，就是它们都能够确保列的唯一性。与主键约束不同的是，唯一约束在一个表中可以有多个，并且设置唯一约束的列是允许有空值的，虽然只能有一个空值。</p><p>例如，在用户信息表中，要避免表中的用户名重名，就可以把用户名列设置为唯一约束。</p></li><li><p>检查约束</p><p>检查约束是用来检查数据表中，字段值是否有效的一个手段。</p><p>例如，学生信息表中的年龄字段是没有负数的，并且数值也是有限制的。如果是大学生，年龄一般应该在 18~30 岁之间。在设置字段的检查约束时要根据实际情况进行设置，这样能够减少无效数据的输入。</p></li><li><p>非空约束</p><p>非空约束用来约束表中的字段不能为空。例如，在学生信息表中，如果不添加学生姓名，那么这条记录是没有用的。</p></li><li><p>默认值约束</p><p>默认值约束用来约束当数据表中某个字段不输入值时，自动为其添加一个已经设置好的值。</p><p>例如，在注册学生信息时，如果不输入学生的性别，那么会默认设置一个性别或者输入一个 “未知”。</p><p>默认值约束通常用在已经设置了非空约束的列，这样能够防止数据表在录入数据时出现错误。</p></li></ol><blockquote><p>以上 6 种约束中，一个数据表中只能有一个主键约束，其它约束可以有多个。</p></blockquote><h2 id="主键约束" tabindex="-1"><a class="header-anchor" href="#主键约束" aria-hidden="true">#</a> 主键约束</h2><p>主键分为单字段主键和多字段联合主键，本节将分别讲解这两种主键约束的创建、修改和删除。</p><p>使用主键应注意以下几点：</p><ul><li>每个表只能定义一个主键。</li><li>主键值必须唯一标识表中的每一行，且不能为 NULL，即表中不可能存在有相同主键值的两行数据。这是唯一性原则。</li><li>一个字段名只能在联合主键字段表中出现一次。</li><li>联合主键不能包含不必要的多余字段。当把联合主键的某一字段删除后，如果剩下的字段构成的主键仍然满足唯一性原则，那么这个联合主键是不正确的。这是最小化原则。</li></ul><h3 id="在创建表时设置主键约束" tabindex="-1"><a class="header-anchor" href="#在创建表时设置主键约束" aria-hidden="true">#</a> 在创建表时设置主键约束</h3><p>在创建数据表时设置主键约束，既可以为表中的一个字段设置主键，也可以为表中多个字段设置联合主键。但是不论使用哪种方法，在一个表中主键只能有一个。下面分别讲解设置单字段主键和多字段联合主键的方法。</p><h4 id="设置单字段主键" tabindex="-1"><a class="header-anchor" href="#设置单字段主键" aria-hidden="true">#</a> 设置单字段主键</h4><p>在 <code>CREATE TABLE</code> 语句中，通过 <code>PRIMARY KEY</code> 关键字来指定主键。</p><p>在定义字段的同时指定主键，语法格式如下：</p><blockquote><p>&lt;字段名&gt; &lt; 数据类型 &gt; PRIMARY KEY [默认值]</p></blockquote><p>在 <code>test_db</code> 数据库中创建 <code>tb_emp3</code> 数据表，其主键为 <code>id</code></p><div class="language-mysql line-numbers-mode" data-ext="mysql"><pre class="language-mysql"><code>CREATE TABLE tb_emp3
(
    id     INT(11) PRIMARY KEY,
    name   VARCHAR(25),
    deptId INT(11),
    salary FLOAT
);
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查看数据表结构</p><div class="language-mysql line-numbers-mode" data-ext="mysql"><pre class="language-mysql"><code>DESC tb_emp3;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>结果如下</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>+--------+-------------+------+-----+---------+-------+
<span class="token operator">|</span> Field  <span class="token operator">|</span> Type        <span class="token operator">|</span> Null <span class="token operator">|</span> Key <span class="token operator">|</span> Default <span class="token operator">|</span> Extra <span class="token operator">|</span>
+--------+-------------+------+-----+---------+-------+
<span class="token operator">|</span> <span class="token function">id</span>     <span class="token operator">|</span> int<span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span>     <span class="token operator">|</span> NO   <span class="token operator">|</span> PRI <span class="token operator">|</span> NULL    <span class="token operator">|</span>       <span class="token operator">|</span>
<span class="token operator">|</span> name   <span class="token operator">|</span> varchar<span class="token punctuation">(</span><span class="token number">25</span><span class="token punctuation">)</span> <span class="token operator">|</span> YES  <span class="token operator">|</span>     <span class="token operator">|</span> NULL    <span class="token operator">|</span>       <span class="token operator">|</span>
<span class="token operator">|</span> deptId <span class="token operator">|</span> int<span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span>     <span class="token operator">|</span> YES  <span class="token operator">|</span>     <span class="token operator">|</span> NULL    <span class="token operator">|</span>       <span class="token operator">|</span>
<span class="token operator">|</span> salary <span class="token operator">|</span> float       <span class="token operator">|</span> YES  <span class="token operator">|</span>     <span class="token operator">|</span> NULL    <span class="token operator">|</span>       <span class="token operator">|</span>
+--------+-------------+------+-----+---------+-------+
<span class="token number">4</span> rows <span class="token keyword">in</span> <span class="token builtin class-name">set</span> <span class="token punctuation">(</span><span class="token number">0.14</span> sec<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>或者是在定义完所有字段之后指定主键，语法格式如下：</p><blockquote><p>[CONSTRAINT &lt; 约束名&gt;] PRIMARY KEY [字段名]</p></blockquote><p>在 <code>test_db</code> 数据库中创建 <code>tb_emp4</code> 数据表，其主键为 id</p><div class="language-mysql line-numbers-mode" data-ext="mysql"><pre class="language-mysql"><code>CREATE TABLE tb_emp4
(
    id     INT(11),
    name   VARCHAR(25),
    deptId INT(11),
    salary FLOAT,
    PRIMARY KEY (id)
);
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查看数据表结构</p><div class="language-mysql line-numbers-mode" data-ext="mysql"><pre class="language-mysql"><code>DESC tb_emp4;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>结果如下</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>+--------+-------------+------+-----+---------+-------+
<span class="token operator">|</span> Field  <span class="token operator">|</span> Type        <span class="token operator">|</span> Null <span class="token operator">|</span> Key <span class="token operator">|</span> Default <span class="token operator">|</span> Extra <span class="token operator">|</span>
+--------+-------------+------+-----+---------+-------+
<span class="token operator">|</span> <span class="token function">id</span>     <span class="token operator">|</span> int<span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span>     <span class="token operator">|</span> NO   <span class="token operator">|</span> PRI <span class="token operator">|</span> NULL    <span class="token operator">|</span>       <span class="token operator">|</span>
<span class="token operator">|</span> name   <span class="token operator">|</span> varchar<span class="token punctuation">(</span><span class="token number">25</span><span class="token punctuation">)</span> <span class="token operator">|</span> YES  <span class="token operator">|</span>     <span class="token operator">|</span> NULL    <span class="token operator">|</span>       <span class="token operator">|</span>
<span class="token operator">|</span> deptId <span class="token operator">|</span> int<span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span>     <span class="token operator">|</span> YES  <span class="token operator">|</span>     <span class="token operator">|</span> NULL    <span class="token operator">|</span>       <span class="token operator">|</span>
<span class="token operator">|</span> salary <span class="token operator">|</span> float       <span class="token operator">|</span> YES  <span class="token operator">|</span>     <span class="token operator">|</span> NULL    <span class="token operator">|</span>       <span class="token operator">|</span>
+--------+-------------+------+-----+---------+-------+
<span class="token number">4</span> rows <span class="token keyword">in</span> <span class="token builtin class-name">set</span> <span class="token punctuation">(</span><span class="token number">0.14</span> sec<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="设置联合主键" tabindex="-1"><a class="header-anchor" href="#设置联合主键" aria-hidden="true">#</a> 设置联合主键</h4><p>所谓的联合主键，就是这个主键是由一张表中多个字段组成的。</p><p>比如，设置学生选课数据表时，使用学生编号做主键还是用课程编号做主键呢？如果用学生编号做主键，那么一个学生就只能选择一门课程。如果用课程编号做主键，那么一门课程只能有一个学生来选。显然，这两种情况都是不符合实际情况的。</p><p>实际上设计学生选课表，要限定的是一个学生只能选择同一课程一次。因此，学生编号和课程编号可以放在一起共同作为主键，这也就是联合主键了。</p><p>主键由多个字段联合组成，语法格式如下：</p><blockquote><p>PRIMARY KEY [字段 1，字段 2，…, 字段 n]</p></blockquote><div class="custom-container tip"><p class="custom-container-title">提示</p><p>当主键是由多个字段组成时，不能直接在字段名后面声明主键约束。</p></div><p>创建数据表 <code>tb_emp5</code>，假设表中没有主键 <code>id</code>，为了唯一确定一个员工，可以把 <code>name</code>、<code>deptId</code> 联合起来作为主键</p><div class="language-mysql line-numbers-mode" data-ext="mysql"><pre class="language-mysql"><code>CREATE TABLE tb_emp5
(
    name   VARCHAR(25),
    deptId INT(11),
    salary FLOAT,
    PRIMARY KEY (name, deptId)
);
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查看数据表结构</p><div class="language-mysql line-numbers-mode" data-ext="mysql"><pre class="language-mysql"><code>DESC tb_emp5;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>结果如下</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>+--------+-------------+------+-----+---------+-------+
<span class="token operator">|</span> Field  <span class="token operator">|</span> Type        <span class="token operator">|</span> Null <span class="token operator">|</span> Key <span class="token operator">|</span> Default <span class="token operator">|</span> Extra <span class="token operator">|</span>
+--------+-------------+------+-----+---------+-------+
<span class="token operator">|</span> name   <span class="token operator">|</span> varchar<span class="token punctuation">(</span><span class="token number">25</span><span class="token punctuation">)</span> <span class="token operator">|</span> NO   <span class="token operator">|</span> PRI <span class="token operator">|</span> NULL    <span class="token operator">|</span>       <span class="token operator">|</span>
<span class="token operator">|</span> deptId <span class="token operator">|</span> int<span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span>     <span class="token operator">|</span> NO   <span class="token operator">|</span> PRI <span class="token operator">|</span> NULL    <span class="token operator">|</span>       <span class="token operator">|</span>
<span class="token operator">|</span> salary <span class="token operator">|</span> float       <span class="token operator">|</span> YES  <span class="token operator">|</span>     <span class="token operator">|</span> NULL    <span class="token operator">|</span>       <span class="token operator">|</span>
+--------+-------------+------+-----+---------+-------+
<span class="token number">3</span> rows <span class="token keyword">in</span> <span class="token builtin class-name">set</span> <span class="token punctuation">(</span><span class="token number">0.14</span> sec<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="在修改表时添加主键约束" tabindex="-1"><a class="header-anchor" href="#在修改表时添加主键约束" aria-hidden="true">#</a> 在修改表时添加主键约束</h3><p>主键约束不仅可以在创建表的同时创建，也可以在修改表时添加。但是需要注意的是，设置成主键约束的字段中不允许有空值。</p><p>在修改数据表时添加主键约束的语法格式如下：</p><blockquote><p>ALTER TABLE &lt;数据表名&gt; ADD PRIMARY KEY (&lt; 字段名 &gt;);</p></blockquote><p>查看 <code>tb_emp2</code> 数据表的表结构</p><div class="language-mysql line-numbers-mode" data-ext="mysql"><pre class="language-mysql"><code>DESC tb_emp2;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>结果如下</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>+--------+-------------+------+-----+---------+-------+
<span class="token operator">|</span> Field  <span class="token operator">|</span> Type        <span class="token operator">|</span> Null <span class="token operator">|</span> Key <span class="token operator">|</span> Default <span class="token operator">|</span> Extra <span class="token operator">|</span>
+--------+-------------+------+-----+---------+-------+
<span class="token operator">|</span> <span class="token function">id</span>     <span class="token operator">|</span> int<span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span>     <span class="token operator">|</span> NO   <span class="token operator">|</span>     <span class="token operator">|</span> NULL    <span class="token operator">|</span>       <span class="token operator">|</span>
<span class="token operator">|</span> name   <span class="token operator">|</span> varchar<span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span> <span class="token operator">|</span> YES  <span class="token operator">|</span>     <span class="token operator">|</span> NULL    <span class="token operator">|</span>       <span class="token operator">|</span>
<span class="token operator">|</span> deptId <span class="token operator">|</span> int<span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span>     <span class="token operator">|</span> YES  <span class="token operator">|</span>     <span class="token operator">|</span> NULL    <span class="token operator">|</span>       <span class="token operator">|</span>
<span class="token operator">|</span> salary <span class="token operator">|</span> float       <span class="token operator">|</span> YES  <span class="token operator">|</span>     <span class="token operator">|</span> NULL    <span class="token operator">|</span>       <span class="token operator">|</span>
+--------+-------------+------+-----+---------+-------+
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>修改数据表 <code>tb_emp2</code>，将字段 <code>id</code> 设置为主键</p><div class="language-mysql line-numbers-mode" data-ext="mysql"><pre class="language-mysql"><code>ALTER TABLE tb_emp2
    ADD PRIMARY KEY (id);
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>查看数据表结构</p><div class="language-mysql line-numbers-mode" data-ext="mysql"><pre class="language-mysql"><code>DESC tb_emp2;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>结果如下</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>+--------+-------------+------+-----+---------+-------+
<span class="token operator">|</span> Field  <span class="token operator">|</span> Type        <span class="token operator">|</span> Null <span class="token operator">|</span> Key <span class="token operator">|</span> Default <span class="token operator">|</span> Extra <span class="token operator">|</span>
+--------+-------------+------+-----+---------+-------+
<span class="token operator">|</span> <span class="token function">id</span>     <span class="token operator">|</span> int<span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span>     <span class="token operator">|</span> NO   <span class="token operator">|</span> PRI <span class="token operator">|</span> NULL    <span class="token operator">|</span>       <span class="token operator">|</span>
<span class="token operator">|</span> name   <span class="token operator">|</span> varchar<span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span> <span class="token operator">|</span> YES  <span class="token operator">|</span>     <span class="token operator">|</span> NULL    <span class="token operator">|</span>       <span class="token operator">|</span>
<span class="token operator">|</span> deptId <span class="token operator">|</span> int<span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span>     <span class="token operator">|</span> YES  <span class="token operator">|</span>     <span class="token operator">|</span> NULL    <span class="token operator">|</span>       <span class="token operator">|</span>
<span class="token operator">|</span> salary <span class="token operator">|</span> float       <span class="token operator">|</span> YES  <span class="token operator">|</span>     <span class="token operator">|</span> NULL    <span class="token operator">|</span>       <span class="token operator">|</span>
+--------+-------------+------+-----+---------+-------+
<span class="token number">4</span> rows <span class="token keyword">in</span> <span class="token builtin class-name">set</span> <span class="token punctuation">(</span><span class="token number">0.12</span> sec<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>通常情况下，当在修改表时要设置表中某个字段的主键约束时，要确保设置成主键约束的字段中值不能够有重复的，并且要保证是非空的。否则，无法设置主键约束。</p><h3 id="删除主键约束" tabindex="-1"><a class="header-anchor" href="#删除主键约束" aria-hidden="true">#</a> 删除主键约束</h3><p>当一个表中不需要主键约束时，就需要从表中将其删除。删除主键约束的方法要比创建主键约束容易的多。</p><p>删除主键约束的语法格式如下所示：</p><blockquote><p>ALTER TABLE &lt;数据表名&gt; DROP PRIMARY KEY;</p></blockquote><p>删除 <code>tb_emp2</code> 表中的主键约束</p><div class="language-MYSQL line-numbers-mode" data-ext="MYSQL"><pre class="language-MYSQL"><code>DROP PRIMARY KEY;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>SQL 语句和运行结果如下</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>Query OK, <span class="token number">0</span> rows affected <span class="token punctuation">(</span><span class="token number">0.94</span> sec<span class="token punctuation">)</span>
Records: <span class="token number">0</span>  Duplicates: <span class="token number">0</span>  Warnings: <span class="token number">0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>由于主键约束在一个表中只能有一个，因此不需要指定主键名就可以删除一个表中的主键约束。</p><h2 id="主键自增" tabindex="-1"><a class="header-anchor" href="#主键自增" aria-hidden="true">#</a> 主键自增</h2><p>在 MySQL 中，当主键定义为自增长后，这个主键的值就不再需要用户输入数据了，而由数据库系统根据定义自动赋值。每增加一条记录，主键会自动以相同的步长进行增长。</p><p>通过给字段添加 <code>AUTO_INCREMENT</code> 属性来实现主键自增长。语法格式如下：</p><blockquote><p>字段名 数据类型 AUTO_INCREMENT</p></blockquote><ul><li>默认情况下，<code>AUTO_INCREMENT</code> 的初始值是 1，每新增一条记录，字段值自动加 1。</li><li>一个表中只能有一个字段使用 <code>AUTO_INCREMENT</code> 约束，且该字段必须有唯一索引，以避免序号重复（即为主键或主键的一部分）。</li><li><code>AUTO_INCREMENT</code> 约束的字段必须具备 <code>NOT NULL</code> 属性。</li><li><code>AUTO_INCREMENT</code> 约束的字段只能是整数类型（<code>TINYINT</code>、<code>SMALLINT</code>、<code>INT</code>、<code>BIGINT</code> 等）。</li><li><code>AUTO_INCREMENT</code> 约束字段的最大值受该字段的数据类型约束，如果达到上限，<code>AUTO_INCREMENT</code> 就会失效。</li></ul><p>定义数据表 <code>tb_student</code>，指定表中 <code>id</code> 字段递增</p><div class="language-mysql line-numbers-mode" data-ext="mysql"><pre class="language-mysql"><code>CREATE TABLE tb_student
(
    id   INT(4) PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(25) NOT NULL
);
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上述语句执行成功后，会创建名为 <code>tb_student</code> 的数据表。其中，<code>id</code> 为主键，每插入一条新记录，<code>id</code> 的值就会在前一条记录的基础上自动加 1。<code>name</code> 为非空字段，该字段的值不能为空值（<code>NULL</code>）。</p><p>向 <code>tb_student</code> 表中插入数据，SQL 语句如下所示：</p><div class="language-mysql line-numbers-mode" data-ext="mysql"><pre class="language-mysql"><code>INSERT INTO tb_student(name)
VALUES (&#39;Java&#39;),
       (&#39;MySQL&#39;),
       (&#39;Python&#39;);
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>语句执行完后，<code>tb_student</code> 表中增加了 3 条记录，在这里并没有输入 <code>id</code> 的值，但系统已经自动添加该值，使用 <code>SELECT</code> 命令查看记录</p><div class="language-mysql line-numbers-mode" data-ext="mysql"><pre class="language-mysql"><code>SELECT * FROM tb_student;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如下所示。</p><div class="language-mysql line-numbers-mode" data-ext="mysql"><pre class="language-mysql"><code>+----+--------+
| id | name   |
+----+--------+
|  1 | Java   |
|  2 | MySQL  |
|  3 | Python |
+----+--------+
4 rows in set (0.01 sec)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container info"><p class="custom-container-title">相关信息</p><p>加上 <code>AUTO_INCREMENT</code> 约束条件后，字段中的每个值都是自动增加的。因此，这个字段不可能出现相同的值。通常情况下，<code>AUTO_INCREMENT</code> 都是作为 <code>id</code> 字段的约束条件，并且将 <code>id</code> 字段作为表的主键。</p></div><h3 id="指定自增字段初始值" tabindex="-1"><a class="header-anchor" href="#指定自增字段初始值" aria-hidden="true">#</a> 指定自增字段初始值</h3><p>如果第一条记录设置了该字段的初始值，那么新增加的记录就从这个初始值开始自增。例如，如果表中插入的第一条记录的 <code>id</code> 值设置为 5，那么再插入记录时，<code>id</code> 值就会从 5 开始往上增加。</p><p>下面创建表 <code>tb_student2</code>，指定主键从 100 开始自增长</p><div class="language-mysql line-numbers-mode" data-ext="mysql"><pre class="language-mysql"><code>CREATE TABLE tb_student2
(
    id   INT         NOT NULL AUTO_INCREMENT,
    name VARCHAR(20) NOT NULL,
    PRIMARY KEY (ID)
) AUTO_INCREMENT = 100;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>向 <code>tb_student2</code> 表中插入数据，并使用 <code>SELECT</code> 命令查询表中记录。</p><div class="language-mysql line-numbers-mode" data-ext="mysql"><pre class="language-mysql"><code>INSERT INTO tb_student2 (name)
VALUES (&#39;Java&#39;);
SELECT *
FROM tb_student2;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>由结果可以看出，id 值从 100 开始自动增长。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>+-----+------+
<span class="token operator">|</span> <span class="token function">id</span>  <span class="token operator">|</span> name <span class="token operator">|</span>
+-----+------+
<span class="token operator">|</span> <span class="token number">100</span> <span class="token operator">|</span> Java <span class="token operator">|</span>
+-----+------+
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="自增字段值不连续" tabindex="-1"><a class="header-anchor" href="#自增字段值不连续" aria-hidden="true">#</a> 自增字段值不连续</h3><p>创建表 <code>tb_student3</code>，其中 <code>id</code> 是自增主键字段，<code>name</code> 是唯一索引</p><div class="language-mysql line-numbers-mode" data-ext="mysql"><pre class="language-mysql"><code>CREATE TABLE tb_student3
(
    id   INT PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(20) UNIQUE KEY,
    age  INT DEFAULT NULL
);
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>向 <code>tb_student3</code> 表中插入数据：</p><div class="language-mysql line-numbers-mode" data-ext="mysql"><pre class="language-mysql"><code>INSERT INTO tb_student3
VALUES (1, 1, 1);
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>此时，表 <code>tb_student3</code> 中已经有了（1,1,1）这条记录，这时再执行一条插入数据命令：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token constant">INSERT</span> <span class="token constant">INTO</span> tb_student3
<span class="token constant">VALUES</span> <span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>由于表中已经存在 <code>name = 1</code> 的记录，所以报 <code>Duplicate key error</code>（唯一键冲突）。在这之后，再插入新的数据时，自增 <code>id</code> 就是 3，这样就出现了自增字段值不连续的情况。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>ERROR <span class="token number">1062</span> <span class="token punctuation">(</span><span class="token number">23000</span><span class="token punctuation">)</span>: Duplicate entry <span class="token string">&#39;1&#39;</span> <span class="token keyword">for</span> key <span class="token string">&#39;name&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="外键约束" tabindex="-1"><a class="header-anchor" href="#外键约束" aria-hidden="true">#</a> 外键约束</h2><p>MySQL 外键约束（FOREIGN KEY）是表的一个特殊字段，经常与主键约束一起使用。对于两个具有关联关系的表而言，相关联字段中主键所在的表就是主表（父表），外键所在的表就是从表（子表）。</p><p>外键用来建立主表与从表的关联关系，为两个表的数据建立连接，约束两个表中数据的一致性和完整性。比如，一个水果摊，只有苹果、桃子、李子、西瓜等 4 种水果，那么，你来到水果摊要买水果就只能选择苹果、桃子、李子和西瓜，其它的水果都是不能购买的。</p><p>主表删除某条记录时，从表中与之对应的记录也必须有相应的改变。一个表可以有一个或多个外键，外键可以为空值，若不为空值，则每一个外键的值必须等于主表中主键的某个值。</p><p>定义外键时，需要遵守下列规则：</p><ul><li>主表必须已经存在于数据库中，或者是当前正在创建的表。如果是后一种情况，则主表与从表是同一个表，这样的表称为自参照表，这种结构称为自参照完整性。</li><li>必须为主表定义主键。</li><li>主键不能包含空值，但允许在外键中出现空值。也就是说，只要外键的每个非空值出现在指定的主键中，这个外键的内容就是正确的。</li><li>在主表的表名后面指定列名或列名的组合。这个列或列的组合必须是主表的主键或候选键。</li><li>外键中列的数目必须和主表的主键中列的数目相同。</li><li>外键中列的数据类型必须和主表主键中对应列的数据类型相同。</li></ul><h3 id="在创建表时设置外键约束" tabindex="-1"><a class="header-anchor" href="#在创建表时设置外键约束" aria-hidden="true">#</a> 在创建表时设置外键约束</h3><p>在 <code>CREATE TABLE</code> 语句中，通过 <code>FOREIGN KEY</code> 关键字来指定外键，具体的语法格式如下：</p><blockquote><p>[CONSTRAINT &lt; 外键名&gt;] FOREIGN KEY 字段名 [，字段名 2，…] REFERENCES &lt;主表名&gt; 主键列 1 [，主键列 2，…]</p></blockquote><p>在 <code>test_db</code> 数据库中创建一个部门表 <code>tb_dept1</code></p><div class="language-mysql line-numbers-mode" data-ext="mysql"><pre class="language-mysql"><code>CREATE TABLE tb_dept1
(
    id       INT(11) PRIMARY KEY,
    name     VARCHAR(22) NOT NULL,
    location VARCHAR(50)
);
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>创建数据表 <code>tb_emp6</code>，并在表 <code>tb_emp6</code> 上创建外键约束，让它的键 <code>deptId</code> 作为外键关联到表 <code>tb_dept1</code> 的主键 <code>id</code></p><div class="language-mysql line-numbers-mode" data-ext="mysql"><pre class="language-mysql"><code>CREATE TABLE tb_emp6
(
    id     INT(11) PRIMARY KEY,
    name   VARCHAR(25),
    deptId INT(11),
    salary FLOAT,
    CONSTRAINT fk_emp_dept1
        FOREIGN KEY (deptId) REFERENCES tb_dept1 (id)
);
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查看数据表结构</p><div class="language-mysql line-numbers-mode" data-ext="mysql"><pre class="language-mysql"><code>DESC tb_emp6;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>结果如下</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>+--------+-------------+------+-----+---------+-------+
<span class="token operator">|</span> Field  <span class="token operator">|</span> Type        <span class="token operator">|</span> Null <span class="token operator">|</span> Key <span class="token operator">|</span> Default <span class="token operator">|</span> Extra <span class="token operator">|</span>
+--------+-------------+------+-----+---------+-------+
<span class="token operator">|</span> <span class="token function">id</span>     <span class="token operator">|</span> int<span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span>     <span class="token operator">|</span> NO   <span class="token operator">|</span> PRI <span class="token operator">|</span> NULL    <span class="token operator">|</span>       <span class="token operator">|</span>
<span class="token operator">|</span> name   <span class="token operator">|</span> varchar<span class="token punctuation">(</span><span class="token number">25</span><span class="token punctuation">)</span> <span class="token operator">|</span> YES  <span class="token operator">|</span>     <span class="token operator">|</span> NULL    <span class="token operator">|</span>       <span class="token operator">|</span>
<span class="token operator">|</span> deptId <span class="token operator">|</span> int<span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span>     <span class="token operator">|</span> YES  <span class="token operator">|</span> MUL <span class="token operator">|</span> NULL    <span class="token operator">|</span>       <span class="token operator">|</span>
<span class="token operator">|</span> salary <span class="token operator">|</span> float       <span class="token operator">|</span> YES  <span class="token operator">|</span>     <span class="token operator">|</span> NULL    <span class="token operator">|</span>       <span class="token operator">|</span>
+--------+-------------+------+-----+---------+-------+
<span class="token number">4</span> rows <span class="token keyword">in</span> <span class="token builtin class-name">set</span> <span class="token punctuation">(</span><span class="token number">1.33</span> sec<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">提示</p><p>从表的外键关联的必须是主表的主键，且主键和外键的数据类型必须一致。例如，两者都是 <code>INT</code> 类型，或者都是 <code>CHAR</code> 类型。如果不满足这样的要求，在创建从表时，就会出现 <code>ERROR 1005 (HY000): Can&#39;t create table</code> 错误。</p></div><h3 id="在修改表时添加外键约束" tabindex="-1"><a class="header-anchor" href="#在修改表时添加外键约束" aria-hidden="true">#</a> 在修改表时添加外键约束</h3><p>外键约束也可以在修改表时添加，但是添加外键约束的前提是：从表中外键列中的数据必须与主表中主键列中的数据一致或者是没有数据。</p><p>在修改数据表时添加外键约束的语法格式如下：</p><blockquote><p>ALTER TABLE &lt;数据表名&gt; ADD CONSTRAINT &lt; 外键名 &gt; FOREIGN KEY (&lt;列名&gt;) REFERENCES &lt; 主表名 &gt; (&lt; 列名 &gt;);</p></blockquote><p>修改数据表 <code>tb_emp2</code>，将字段 <code>deptId</code> 设置为外键，与数据表 <code>tb_dept1</code> 的主键 <code>id</code> 进行关联</p><div class="language-mysql line-numbers-mode" data-ext="mysql"><pre class="language-mysql"><code>ALTER TABLE tb_emp2
    ADD CONSTRAINT fk_tb_dept1
        FOREIGN KEY (deptId)
            REFERENCES tb_dept1 (id);
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查看结果</p><div class="language-mysql line-numbers-mode" data-ext="mysql"><pre class="language-mysql"><code>SHOW CREATE TABLE tb_emp2\\G
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>结果如下所示</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>*************************** <span class="token number">1</span>. row ***************************
       Table: tb_emp2
Create Table: CREATE TABLE <span class="token variable"><span class="token variable">\`</span>tb_emp2<span class="token variable">\`</span></span> <span class="token punctuation">(</span>
  <span class="token variable"><span class="token variable">\`</span><span class="token function">id</span><span class="token variable">\`</span></span> int<span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> NOT NULL,
  <span class="token variable"><span class="token variable">\`</span>name<span class="token variable">\`</span></span> varchar<span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span> DEFAULT NULL,
  <span class="token variable"><span class="token variable">\`</span>deptId<span class="token variable">\`</span></span> int<span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> DEFAULT NULL,
  <span class="token variable"><span class="token variable">\`</span>salary<span class="token variable">\`</span></span> float DEFAULT NULL,
  PRIMARY KEY <span class="token punctuation">(</span><span class="token variable"><span class="token variable">\`</span><span class="token function">id</span><span class="token variable">\`</span></span><span class="token punctuation">)</span>,
  KEY <span class="token variable"><span class="token variable">\`</span>fk_tb_dept1<span class="token variable">\`</span></span> <span class="token punctuation">(</span><span class="token variable"><span class="token variable">\`</span>deptId<span class="token variable">\`</span></span><span class="token punctuation">)</span>,
  CONSTRAINT <span class="token variable"><span class="token variable">\`</span>fk_tb_dept1<span class="token variable">\`</span></span> FOREIGN KEY <span class="token punctuation">(</span><span class="token variable"><span class="token variable">\`</span>deptId<span class="token variable">\`</span></span><span class="token punctuation">)</span> REFERENCES <span class="token variable"><span class="token variable">\`</span>tb_dept1<span class="token variable">\`</span></span> <span class="token punctuation">(</span><span class="token variable"><span class="token variable">\`</span><span class="token function">id</span><span class="token variable">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">)</span> <span class="token assign-left variable">ENGINE</span><span class="token operator">=</span>InnoDB DEFAULT <span class="token assign-left variable">CHARSET</span><span class="token operator">=</span>gb2312
<span class="token number">1</span> row <span class="token keyword">in</span> <span class="token builtin class-name">set</span> <span class="token punctuation">(</span><span class="token number">0.12</span> sec<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">提示</p><p>在为已经创建好的数据表添加外键约束时，要确保添加外键约束的列的值全部来源于主键列，并且外键列不能为空。</p></div><h3 id="删除外键约束" tabindex="-1"><a class="header-anchor" href="#删除外键约束" aria-hidden="true">#</a> 删除外键约束</h3><p>当一个表中不需要外键约束时，就需要从表中将其删除。外键一旦删除，就会解除主表和从表间的关联关系。</p><p>删除外键约束的语法格式如下所示：</p><blockquote><p>ALTER TABLE &lt;表名&gt; DROP FOREIGN KEY &lt; 外键约束名 &gt;;</p></blockquote><p>删除数据表 <code>tb_emp2</code> 中的外键约束 <code>fk_tb_dept1</code></p><div class="language-mysql line-numbers-mode" data-ext="mysql"><pre class="language-mysql"><code>DROP FOREIGN KEY fk_tb_dept1;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>查看结果</p><div class="language-mysql line-numbers-mode" data-ext="mysql"><pre class="language-mysql"><code>SHOW CREATE TABLE tb_emp2\\G
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>结果如下所示</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>*************************** <span class="token number">1</span>. row ***************************
       Table: tb_emp2
Create Table: CREATE TABLE <span class="token variable"><span class="token variable">\`</span>tb_emp2<span class="token variable">\`</span></span> <span class="token punctuation">(</span>
  <span class="token variable"><span class="token variable">\`</span><span class="token function">id</span><span class="token variable">\`</span></span> int<span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> NOT NULL,
  <span class="token variable"><span class="token variable">\`</span>name<span class="token variable">\`</span></span> varchar<span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span> DEFAULT NULL,
  <span class="token variable"><span class="token variable">\`</span>deptId<span class="token variable">\`</span></span> int<span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> DEFAULT NULL,
  <span class="token variable"><span class="token variable">\`</span>salary<span class="token variable">\`</span></span> float DEFAULT NULL,
  PRIMARY KEY <span class="token punctuation">(</span><span class="token variable"><span class="token variable">\`</span><span class="token function">id</span><span class="token variable">\`</span></span><span class="token punctuation">)</span>,
  KEY <span class="token variable"><span class="token variable">\`</span>fk_tb_dept1<span class="token variable">\`</span></span> <span class="token punctuation">(</span><span class="token variable"><span class="token variable">\`</span>deptId<span class="token variable">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">)</span> <span class="token assign-left variable">ENGINE</span><span class="token operator">=</span>InnoDB DEFAULT <span class="token assign-left variable">CHARSET</span><span class="token operator">=</span>gb2312
<span class="token number">1</span> row <span class="token keyword">in</span> <span class="token builtin class-name">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="唯一约束" tabindex="-1"><a class="header-anchor" href="#唯一约束" aria-hidden="true">#</a> 唯一约束</h2><p>MySQL 唯一约束（Unique Key）是指所有记录中字段的值不能重复出现。例如，为 <code>id</code> 字段加上唯一性约束后，每条记录的 <code>id</code> 值都是唯一的，不能出现重复的情况。如果其中一条记录的 <code>id</code> 值为‘0001’，那么该表中就不能出现另一条记录的 <code>id</code> 值也为‘0001’。</p><p>唯一约束与主键约束相似的是它们都可以确保列的唯一性。不同的是，唯一约束在一个表中可有多个，并且设置唯一约束的列允许有空值，但是只能有一个空值。而主键约束在一个表中只能有一个，且不允许有空值。比如，在用户信息表中，为了避免表中用户名重名，可以把用户名设置为唯一约束。</p><h3 id="在创建表时设置唯一约束" tabindex="-1"><a class="header-anchor" href="#在创建表时设置唯一约束" aria-hidden="true">#</a> 在创建表时设置唯一约束</h3><p>唯一约束可以在创建表时直接设置，通常设置在除了主键以外的其它列上。</p><p>在定义完列之后直接使用 <code>UNIQUE</code> 关键字指定唯一约束，语法格式如下：</p><blockquote><p>&lt;字段名&gt; &lt; 数据类型 &gt; UNIQUE</p></blockquote><p>创建数据表 <code>tb_dept2</code>，指定部门的名称唯一</p><div class="language-mysql line-numbers-mode" data-ext="mysql"><pre class="language-mysql"><code>CREATE TABLE tb_dept2
(
    id       INT(11) PRIMARY KEY,
    name     VARCHAR(22) UNIQUE,
    location VARCHAR(50)
);
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查看结果</p><div class="language-mysql line-numbers-mode" data-ext="mysql"><pre class="language-mysql"><code>DESC tb_dept2;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>SQL 语句和运行结果如下所示</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>+----------+-------------+------+-----+---------+-------+
<span class="token operator">|</span> Field    <span class="token operator">|</span> Type        <span class="token operator">|</span> Null <span class="token operator">|</span> Key <span class="token operator">|</span> Default <span class="token operator">|</span> Extra <span class="token operator">|</span>
+----------+-------------+------+-----+---------+-------+
<span class="token operator">|</span> <span class="token function">id</span>       <span class="token operator">|</span> int<span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span>     <span class="token operator">|</span> NO   <span class="token operator">|</span> PRI <span class="token operator">|</span> NULL    <span class="token operator">|</span>       <span class="token operator">|</span>
<span class="token operator">|</span> name     <span class="token operator">|</span> varchar<span class="token punctuation">(</span><span class="token number">40</span><span class="token punctuation">)</span> <span class="token operator">|</span> YES  <span class="token operator">|</span> UNI <span class="token operator">|</span> NULL    <span class="token operator">|</span>       <span class="token operator">|</span>
<span class="token operator">|</span> location <span class="token operator">|</span> varchar<span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token operator">|</span> YES  <span class="token operator">|</span>     <span class="token operator">|</span> NULL    <span class="token operator">|</span>       <span class="token operator">|</span>
+----------+-------------+------+-----+---------+-------+
<span class="token number">3</span> rows <span class="token keyword">in</span> <span class="token builtin class-name">set</span> <span class="token punctuation">(</span><span class="token number">0.08</span> sec<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="在修改表时添加唯一约束" tabindex="-1"><a class="header-anchor" href="#在修改表时添加唯一约束" aria-hidden="true">#</a> 在修改表时添加唯一约束</h3><p>在修改表时添加唯一约束的语法格式为：</p><blockquote><p>ALTER TABLE &lt;数据表名&gt; ADD CONSTRAINT &lt; 唯一约束名 &gt; UNIQUE (&lt; 列名 &gt;);</p></blockquote><p>修改数据表 <code>tb_dept1</code>，指定部门的名称唯一</p><div class="language-mysql line-numbers-mode" data-ext="mysql"><pre class="language-mysql"><code>ALTER TABLE tb_dept1
    ADD CONSTRAINT unique_name UNIQUE (name);
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>查看数据表结构</p><div class="language-mysql line-numbers-mode" data-ext="mysql"><pre class="language-mysql"><code>DESC tb_dept1;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>结果如下</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>+----------+-------------+------+-----+---------+-------+
<span class="token operator">|</span> Field    <span class="token operator">|</span> Type        <span class="token operator">|</span> Null <span class="token operator">|</span> Key <span class="token operator">|</span> Default <span class="token operator">|</span> Extra <span class="token operator">|</span>
+----------+-------------+------+-----+---------+-------+
<span class="token operator">|</span> <span class="token function">id</span>       <span class="token operator">|</span> int<span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span>     <span class="token operator">|</span> NO   <span class="token operator">|</span> PRI <span class="token operator">|</span> NULL    <span class="token operator">|</span>       <span class="token operator">|</span>
<span class="token operator">|</span> name     <span class="token operator">|</span> varchar<span class="token punctuation">(</span><span class="token number">22</span><span class="token punctuation">)</span> <span class="token operator">|</span> NO   <span class="token operator">|</span> UNI <span class="token operator">|</span> NULL    <span class="token operator">|</span>       <span class="token operator">|</span>
<span class="token operator">|</span> location <span class="token operator">|</span> varchar<span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token operator">|</span> YES  <span class="token operator">|</span>     <span class="token operator">|</span> NULL    <span class="token operator">|</span>       <span class="token operator">|</span>
+----------+-------------+------+-----+---------+-------+
<span class="token number">3</span> rows <span class="token keyword">in</span> <span class="token builtin class-name">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="删除唯一约束" tabindex="-1"><a class="header-anchor" href="#删除唯一约束" aria-hidden="true">#</a> 删除唯一约束</h3><p>在 MySQL 中删除唯一约束的语法格式如下：</p><blockquote><p>ALTER TABLE &lt;表名&gt; DROP INDEX &lt; 唯一约束名 &gt;;</p></blockquote><p>删除数据表 <code>tb_dept1</code> 中的唯一约束 <code>unique_name</code></p><div class="language-mysql line-numbers-mode" data-ext="mysql"><pre class="language-mysql"><code>ALTER TABLE tb_dept1
    DROP INDEX unique_name;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>查看数据表结构</p><div class="language-mysql line-numbers-mode" data-ext="mysql"><pre class="language-mysql"><code> DESC tb_dept1;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>结果如下</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>+----------+-------------+------+-----+---------+-------+
<span class="token operator">|</span> Field    <span class="token operator">|</span> Type        <span class="token operator">|</span> Null <span class="token operator">|</span> Key <span class="token operator">|</span> Default <span class="token operator">|</span> Extra <span class="token operator">|</span>
+----------+-------------+------+-----+---------+-------+
<span class="token operator">|</span> <span class="token function">id</span>       <span class="token operator">|</span> int<span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span>     <span class="token operator">|</span> NO   <span class="token operator">|</span> PRI <span class="token operator">|</span> NULL    <span class="token operator">|</span>       <span class="token operator">|</span>
<span class="token operator">|</span> name     <span class="token operator">|</span> varchar<span class="token punctuation">(</span><span class="token number">22</span><span class="token punctuation">)</span> <span class="token operator">|</span> NO   <span class="token operator">|</span>     <span class="token operator">|</span> NULL    <span class="token operator">|</span>       <span class="token operator">|</span>
<span class="token operator">|</span> location <span class="token operator">|</span> varchar<span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token operator">|</span> YES  <span class="token operator">|</span>     <span class="token operator">|</span> NULL    <span class="token operator">|</span>       <span class="token operator">|</span>
+----------+-------------+------+-----+---------+-------+
<span class="token number">3</span> rows <span class="token keyword">in</span> <span class="token builtin class-name">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="检查约束" tabindex="-1"><a class="header-anchor" href="#检查约束" aria-hidden="true">#</a> 检查约束</h2><p>MySQL 检查约束（CHECK）是用来检查数据表中字段值有效性的一种手段，可以通过 <code>CREATE TABLE</code> 或 <code>ALTER TABLE</code> 语句实现。设置检查约束时要根据实际情况进行设置，这样能够减少无效数据的输入。</p><h3 id="选取设置检查约束的字段" tabindex="-1"><a class="header-anchor" href="#选取设置检查约束的字段" aria-hidden="true">#</a> 选取设置检查约束的字段</h3><p>检查约束使用 <code>CHECK</code> 关键字，具体的语法格式如下：</p><blockquote><p>CHECK &lt;表达式&gt;</p></blockquote><p>其中，“表达式” 指的就是 SQL 表达式，用于指定需要检查的限定条件。</p><p>若将 <code>CHECK</code> 约束子句置于表中某个列的定义之后，则这种约束也称为基于列的 <code>CHECK</code> 约束。</p><p>在更新表数据的时候，系统会检查更新后的数据行是否满足 <code>CHECK</code> 约束中的限定条件。MySQL 可以使用简单的表达式来实现 <code>CHECK</code> 约束，也允许使用复杂的表达式作为限定条件，例如在限定条件中加入子查询。</p><div class="custom-container tip"><p class="custom-container-title">提示</p><p>若将 CHECK 约束子句置于所有列的定义以及主键约束和外键定义之后，则这种约束也称为基于表的 CHECK 约束。该约束可以同时对表中多个列设置限定条件。</p></div><h3 id="在创建表时设置检查约束" tabindex="-1"><a class="header-anchor" href="#在创建表时设置检查约束" aria-hidden="true">#</a> 在创建表时设置检查约束</h3><p>一般情况下，如果系统的表结构已经设计完成，那么在创建表时就可以为字段设置检查约束了。</p><p>创建表时设置检查约束的语法格式如下：</p><blockquote><p>CHECK (&lt;检查约束&gt;)</p></blockquote><p>在 <code>test_db</code> 数据库中创建 <code>tb_emp7</code> 数据表，要求 <code>salary</code> 字段值大于 0 且小于 10000</p><div class="language-mysql line-numbers-mode" data-ext="mysql"><pre class="language-mysql"><code>CREATE TABLE tb_emp7
(
    id     INT(11) PRIMARY KEY,
    name   VARCHAR(25),
    deptId INT(11),
    salary FLOAT,
    CHECK (salary &gt; 0 AND salary &lt; 100),
    FOREIGN KEY (deptId) REFERENCES tb_dept1 (id)
);
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="在修改表时添加检查约束" tabindex="-1"><a class="header-anchor" href="#在修改表时添加检查约束" aria-hidden="true">#</a> 在修改表时添加检查约束</h3><p>如果一个表创建完成，可以通过修改表的方式为表添加检查约束。</p><p>修改表时设置检查约束的语法格式如下：</p><blockquote><p>ALTER TABLE tb_emp7 ADD CONSTRAINT &lt;检查约束名&gt; CHECK (&lt; 检查约束 &gt;)</p></blockquote><p>修改 <code>tb_emp7</code> 数据表，要求 <code>id</code> 字段值大于 0</p><div class="language-mysql line-numbers-mode" data-ext="mysql"><pre class="language-mysql"><code>ALTER TABLE tb_emp7
    ADD CONSTRAINT check_id
        CHECK (id &gt; 0);
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="删除检查约束" tabindex="-1"><a class="header-anchor" href="#删除检查约束" aria-hidden="true">#</a> 删除检查约束</h3><p>修改表时删除检查约束的语法格式如下：</p><blockquote><p>ALTER TABLE &lt;数据表名&gt; DROP CONSTRAINT &lt; 检查约束名 &gt;;</p></blockquote><p>删除 <code>tb_emp7</code> 表中的 <code>check_id</code> 检查约束</p><div class="language-mysql line-numbers-mode" data-ext="mysql"><pre class="language-mysql"><code>ALTER TABLE tb_emp7
    DROP CONSTRAINT check_id;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>默认值（Default）的完整称呼是 “默认值约束（Default Constraint）”，用来指定某列的默认值。在表中插入一条新记录时，如果没有为某个字段赋值，系统就会自动为这个字段插入默认值。</p><p>例如，员工信息表中，部门位置在北京的较多，那么部门位置就可以默认为 “北京”，系统就会自动为这个字段赋值为 “北京”。</p><blockquote><p>默认值约束通常用在已经设置了非空约束的列，这样能够防止数据表在录入数据时出现错误。</p></blockquote><h2 id="默认值约束" tabindex="-1"><a class="header-anchor" href="#默认值约束" aria-hidden="true">#</a> 默认值约束</h2><h3 id="在创建表时设置默认值约束" tabindex="-1"><a class="header-anchor" href="#在创建表时设置默认值约束" aria-hidden="true">#</a> 在创建表时设置默认值约束</h3><p>创建表时可以使用 <code>DEFAULT</code> 关键字设置默认值约束，具体的语法格式如下：</p><blockquote><p>&lt;字段名&gt; &lt; 数据类型 &gt; DEFAULT &lt; 默认值 &gt;;</p></blockquote><p>其中，“默认值” 为该字段设置的默认值，如果是字符类型的，要用单引号括起来。</p><p>创建数据表 <code>tb_dept3</code>，指定部门位置默认为 <code>Beijing</code></p><div class="language-mysql line-numbers-mode" data-ext="mysql"><pre class="language-mysql"><code>CREATE TABLE tb_dept3
(
    id       INT(11) PRIMARY KEY,
    name     VARCHAR(22),
    location VARCHAR(50) DEFAULT &#39;Beijing&#39;
);
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查看数据表结构</p><div class="language-mysql line-numbers-mode" data-ext="mysql"><pre class="language-mysql"><code> DESC tb_dept3;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>结果如下</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>+----------+-------------+------+-----+---------+-------+
<span class="token operator">|</span> Field    <span class="token operator">|</span> Type        <span class="token operator">|</span> Null <span class="token operator">|</span> Key <span class="token operator">|</span> Default <span class="token operator">|</span> Extra <span class="token operator">|</span>
+----------+-------------+------+-----+---------+-------+
<span class="token operator">|</span> <span class="token function">id</span>       <span class="token operator">|</span> int<span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span>     <span class="token operator">|</span> NO   <span class="token operator">|</span> PRI <span class="token operator">|</span> NULL    <span class="token operator">|</span>       <span class="token operator">|</span>
<span class="token operator">|</span> name     <span class="token operator">|</span> varchar<span class="token punctuation">(</span><span class="token number">22</span><span class="token punctuation">)</span> <span class="token operator">|</span> YES  <span class="token operator">|</span>     <span class="token operator">|</span> NULL    <span class="token operator">|</span>       <span class="token operator">|</span>
<span class="token operator">|</span> location <span class="token operator">|</span> varchar<span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token operator">|</span> YES  <span class="token operator">|</span>     <span class="token operator">|</span> Beijing <span class="token operator">|</span>       <span class="token operator">|</span>
+----------+-------------+------+-----+---------+-------+
<span class="token number">3</span> rows <span class="token keyword">in</span> <span class="token builtin class-name">set</span> <span class="token punctuation">(</span><span class="token number">0.06</span> sec<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>以上语句执行成功之后，表 <code>tb_dept3</code> 上的字段 <code>location</code> 拥有了一个默认值 <code>Beijing</code>，新插入的记录如果没有指定部门位置，则默认都为 <code>Beijing</code>。</p><div class="custom-container tip"><p class="custom-container-title">提示</p><p>在创建表时为列添加默认值，可以一次为多个列添加默认值，需要注意不同列的数据类型。</p></div><h3 id="在修改表时添加默认值约束" tabindex="-1"><a class="header-anchor" href="#在修改表时添加默认值约束" aria-hidden="true">#</a> 在修改表时添加默认值约束</h3><p>修改表时添加默认值约束的语法格式如下：</p><blockquote><p>ALTER TABLE &lt;数据表名&gt; CHANGE COLUMN &lt;字段名&gt; &lt; 数据类型 &gt; DEFAULT &lt; 默认值 &gt;;</p></blockquote><p>修改数据表 <code>tb_dept3</code>，将部门位置的默认值修改为 <code>Shanghai</code></p><div class="language-mysql line-numbers-mode" data-ext="mysql"><pre class="language-mysql"><code>ALTER TABLE tb_dept3
    CHANGE COLUMN location
        location VARCHAR(50) DEFAULT &#39;Shanghai&#39;;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查看数据表结构</p><div class="language-mysql line-numbers-mode" data-ext="mysql"><pre class="language-mysql"><code> DESC tb_dept3;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>结果如下</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>+----------+-------------+------+-----+----------+-------+
<span class="token operator">|</span> Field    <span class="token operator">|</span> Type        <span class="token operator">|</span> Null <span class="token operator">|</span> Key <span class="token operator">|</span> Default  <span class="token operator">|</span> Extra <span class="token operator">|</span>
+----------+-------------+------+-----+----------+-------+
<span class="token operator">|</span> <span class="token function">id</span>       <span class="token operator">|</span> int<span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span>     <span class="token operator">|</span> NO   <span class="token operator">|</span> PRI <span class="token operator">|</span> NULL     <span class="token operator">|</span>       <span class="token operator">|</span>
<span class="token operator">|</span> name     <span class="token operator">|</span> varchar<span class="token punctuation">(</span><span class="token number">22</span><span class="token punctuation">)</span> <span class="token operator">|</span> YES  <span class="token operator">|</span>     <span class="token operator">|</span> NULL     <span class="token operator">|</span>       <span class="token operator">|</span>
<span class="token operator">|</span> location <span class="token operator">|</span> varchar<span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token operator">|</span> YES  <span class="token operator">|</span>     <span class="token operator">|</span> Shanghai <span class="token operator">|</span>       <span class="token operator">|</span>
+----------+-------------+------+-----+----------+-------+
<span class="token number">3</span> rows <span class="token keyword">in</span> <span class="token builtin class-name">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="删除默认值约束" tabindex="-1"><a class="header-anchor" href="#删除默认值约束" aria-hidden="true">#</a> 删除默认值约束</h3><p>当一个表中的列不需要设置默认值时，就需要从表中将其删除。</p><p>修改表时删除默认值约束的语法格式如下：</p><blockquote><p>ALTER TABLE &lt;数据表名&gt; CHANGE COLUMN &lt;字段名&gt; &lt; 字段名 &gt; &lt; 数据类型 &gt; DEFAULT NULL;</p></blockquote><p>修改数据表 <code>tb_dept3</code>，将部门位置的默认值约束删除</p><div class="language-mysql line-numbers-mode" data-ext="mysql"><pre class="language-mysql"><code>ALTER TABLE tb_dept3
    CHANGE COLUMN location
        location VARCHAR(50) DEFAULT NULL;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查看数据表结构</p><div class="language-mysql line-numbers-mode" data-ext="mysql"><pre class="language-mysql"><code> DESC tb_dept3;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>结果如下</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>+----------+-------------+------+-----+----------+-------+
<span class="token operator">|</span> Field    <span class="token operator">|</span> Type        <span class="token operator">|</span> Null <span class="token operator">|</span> Key <span class="token operator">|</span> Default  <span class="token operator">|</span> Extra <span class="token operator">|</span>
+----------+-------------+------+-----+----------+-------+
<span class="token operator">|</span> <span class="token function">id</span>       <span class="token operator">|</span> int<span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span>     <span class="token operator">|</span> NO   <span class="token operator">|</span> PRI <span class="token operator">|</span> NULL     <span class="token operator">|</span>       <span class="token operator">|</span>
<span class="token operator">|</span> name     <span class="token operator">|</span> varchar<span class="token punctuation">(</span><span class="token number">22</span><span class="token punctuation">)</span> <span class="token operator">|</span> YES  <span class="token operator">|</span>     <span class="token operator">|</span> NULL     <span class="token operator">|</span>       <span class="token operator">|</span>
<span class="token operator">|</span> location <span class="token operator">|</span> varchar<span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token operator">|</span> YES  <span class="token operator">|</span>     <span class="token operator">|</span> NULL     <span class="token operator">|</span>       <span class="token operator">|</span>
+----------+-------------+------+-----+----------+-------+
<span class="token number">3</span> rows <span class="token keyword">in</span> <span class="token builtin class-name">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="非空约束" tabindex="-1"><a class="header-anchor" href="#非空约束" aria-hidden="true">#</a> 非空约束</h2><p>MySQL 非空约束（NOT NULL）指字段的值不能为空。对于使用了非空约束的字段，如果用户在添加数据时没有指定值，数据库系统就会报错。可以通过 <code>CREATE TABLE</code> 或 <code>ALTER TABLE</code> 语句实现。在表中某个列的定义后加上关键字 <code>NOT NULL</code> 作为限定词，来约束该列的取值不能为空。</p><p>比如，在用户信息表中，如果不添加用户名，那么这条用户信息就是无效的，这时就可以为用户名字段设置非空约束。</p><h3 id="在创建表时设置非空约束" tabindex="-1"><a class="header-anchor" href="#在创建表时设置非空约束" aria-hidden="true">#</a> 在创建表时设置非空约束</h3><p>创建表时可以使用 <code>NOT NULL</code> 关键字设置非空约束，具体的语法格式如下：</p><blockquote><p>&lt;字段名&gt; &lt; 数据类型 &gt; NOT NULL;</p></blockquote><p>创建数据表 <code>tb_dept4</code>，指定部门名称不能为空</p><div class="language-mysql line-numbers-mode" data-ext="mysql"><pre class="language-mysql"><code>CREATE TABLE tb_dept4
(
    id       INT(11) PRIMARY KEY,
    name     VARCHAR(22) NOT NULL,
    location VARCHAR(50)
);
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查看数据表</p><div class="language-mysql line-numbers-mode" data-ext="mysql"><pre class="language-mysql"><code>DESC tb_dept3;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>结果如下</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>+----------+-------------+------+-----+---------+-------+
<span class="token operator">|</span> Field    <span class="token operator">|</span> Type        <span class="token operator">|</span> Null <span class="token operator">|</span> Key <span class="token operator">|</span> Default <span class="token operator">|</span> Extra <span class="token operator">|</span>
+----------+-------------+------+-----+---------+-------+
<span class="token operator">|</span> <span class="token function">id</span>       <span class="token operator">|</span> int<span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span>     <span class="token operator">|</span> NO   <span class="token operator">|</span> PRI <span class="token operator">|</span> NULL    <span class="token operator">|</span>       <span class="token operator">|</span>
<span class="token operator">|</span> name     <span class="token operator">|</span> varchar<span class="token punctuation">(</span><span class="token number">22</span><span class="token punctuation">)</span> <span class="token operator">|</span> NO   <span class="token operator">|</span>     <span class="token operator">|</span> NULL    <span class="token operator">|</span>       <span class="token operator">|</span>
<span class="token operator">|</span> location <span class="token operator">|</span> varchar<span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token operator">|</span> YES  <span class="token operator">|</span>     <span class="token operator">|</span> NULL    <span class="token operator">|</span>       <span class="token operator">|</span>
+----------+-------------+------+-----+---------+-------+
<span class="token number">3</span> rows <span class="token keyword">in</span> <span class="token builtin class-name">set</span> <span class="token punctuation">(</span><span class="token number">0.06</span> sec<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="在修改表时添加非空约束" tabindex="-1"><a class="header-anchor" href="#在修改表时添加非空约束" aria-hidden="true">#</a> 在修改表时添加非空约束</h3><p>如果在创建表时忘记了为字段设置非空约束，也可以通过修改表进行非空约束的添加。</p><p>修改表时设置非空约束的语法格式如下：</p><blockquote><p>ALTER TABLE &lt;数据表名&gt; CHANGE COLUMN &lt;字段名&gt; &lt;字段名&gt; &lt; 数据类型 &gt; NOT NULL;</p></blockquote><p>修改数据表 <code>tb_dept4</code>，指定部门位置不能为空</p><div class="language-mysql line-numbers-mode" data-ext="mysql"><pre class="language-mysql"><code>ALTER TABLE tb_dept4
    CHANGE COLUMN location
        location VARCHAR(50) NOT NULL;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查看数据表</p><div class="language-mysql line-numbers-mode" data-ext="mysql"><pre class="language-mysql"><code>DESC tb_dept4;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>结果如下</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>+----------+-------------+------+-----+----------+-------+
<span class="token operator">|</span> Field    <span class="token operator">|</span> Type        <span class="token operator">|</span> Null <span class="token operator">|</span> Key <span class="token operator">|</span> Default  <span class="token operator">|</span> Extra <span class="token operator">|</span>
+----------+-------------+------+-----+----------+-------+
<span class="token operator">|</span> <span class="token function">id</span>       <span class="token operator">|</span> int<span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span>     <span class="token operator">|</span> NO   <span class="token operator">|</span> PRI <span class="token operator">|</span> NULL     <span class="token operator">|</span>       <span class="token operator">|</span>
<span class="token operator">|</span> name     <span class="token operator">|</span> varchar<span class="token punctuation">(</span><span class="token number">22</span><span class="token punctuation">)</span> <span class="token operator">|</span> NO   <span class="token operator">|</span>     <span class="token operator">|</span> NULL     <span class="token operator">|</span>       <span class="token operator">|</span>
<span class="token operator">|</span> location <span class="token operator">|</span> varchar<span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token operator">|</span> NO   <span class="token operator">|</span>     <span class="token operator">|</span> NULL     <span class="token operator">|</span>       <span class="token operator">|</span>
+----------+-------------+------+-----+----------+-------+
<span class="token number">3</span> rows <span class="token keyword">in</span> <span class="token builtin class-name">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="删除非空约束" tabindex="-1"><a class="header-anchor" href="#删除非空约束" aria-hidden="true">#</a> 删除非空约束</h3><p>修改表时删除非空约束的语法规则如下：</p><blockquote><p>ALTER TABLE &lt;数据表名&gt; CHANGE COLUMN &lt;字段名&gt; &lt; 字段名 &gt; &lt; 数据类型 &gt; NULL;</p></blockquote><p>修改数据表 <code>tb_dept4</code>，将部门位置的非空约束删除</p><div class="language-mysql line-numbers-mode" data-ext="mysql"><pre class="language-mysql"><code>ALTER TABLE tb_dept4
    CHANGE COLUMN location
        location VARCHAR(50) NULL;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查看数据表</p><div class="language-mysql line-numbers-mode" data-ext="mysql"><pre class="language-mysql"><code>DESC tb_dept4;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>结果如下</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>+----------+-------------+------+-----+----------+-------+
<span class="token operator">|</span> Field    <span class="token operator">|</span> Type        <span class="token operator">|</span> Null <span class="token operator">|</span> Key <span class="token operator">|</span> Default  <span class="token operator">|</span> Extra <span class="token operator">|</span>
+----------+-------------+------+-----+----------+-------+
<span class="token operator">|</span> <span class="token function">id</span>       <span class="token operator">|</span> int<span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span>     <span class="token operator">|</span> NO   <span class="token operator">|</span> PRI <span class="token operator">|</span> NULL     <span class="token operator">|</span>       <span class="token operator">|</span>
<span class="token operator">|</span> name     <span class="token operator">|</span> varchar<span class="token punctuation">(</span><span class="token number">22</span><span class="token punctuation">)</span> <span class="token operator">|</span> NO   <span class="token operator">|</span>     <span class="token operator">|</span> NULL     <span class="token operator">|</span>       <span class="token operator">|</span>
<span class="token operator">|</span> location <span class="token operator">|</span> varchar<span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token operator">|</span> YES  <span class="token operator">|</span>     <span class="token operator">|</span> NULL     <span class="token operator">|</span>       <span class="token operator">|</span>
+----------+-------------+------+-----+----------+-------+
<span class="token number">3</span> rows <span class="token keyword">in</span> <span class="token builtin class-name">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="查看表中的约束" tabindex="-1"><a class="header-anchor" href="#查看表中的约束" aria-hidden="true">#</a> 查看表中的约束</h2><p>在 MySQL 中可以使用 <code>SHOW CREATE TABLE</code> 语句来查看表中的约束。</p><p>查看数据表中的约束语法格式如下：</p><blockquote><p>SHOW CREATE TABLE &lt;数据表名&gt;;</p></blockquote><p>创建数据表 <code>tb_emp8</code> 并指定 <code>id</code> 为主键约束，<code>name</code> 为唯一约束，<code>deptId</code> 为非空约束和外键约束</p><div class="language-mysql line-numbers-mode" data-ext="mysql"><pre class="language-mysql"><code>CREATE TABLE tb_emp8
(
    id     INT(11) PRIMARY KEY,
    name   VARCHAR(22) UNIQUE,
    deptId INT(11) NOT NULL,
    salary FLOAT DEFAULT 0,
    CHECK (salary &gt; 0),
    FOREIGN KEY (deptId) REFERENCES tb_dept1 (id)
);
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后查看表中的约束</p><div class="language-mysql line-numbers-mode" data-ext="mysql"><pre class="language-mysql"><code>SHOW CREATE TABLE tb_emp8 \\G
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>结果如下</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>*************************** <span class="token number">1</span>. row ***************************
       Table: tb_emp8
Create Table: CREATE TABLE <span class="token variable"><span class="token variable">\`</span>tb_emp8<span class="token variable">\`</span></span> <span class="token punctuation">(</span>
  <span class="token variable"><span class="token variable">\`</span><span class="token function">id</span><span class="token variable">\`</span></span> int<span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> NOT NULL,
  <span class="token variable"><span class="token variable">\`</span>name<span class="token variable">\`</span></span> varchar<span class="token punctuation">(</span><span class="token number">22</span><span class="token punctuation">)</span> DEFAULT NULL,
  <span class="token variable"><span class="token variable">\`</span>deptId<span class="token variable">\`</span></span> int<span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> NOT NULL,
  <span class="token variable"><span class="token variable">\`</span>salary<span class="token variable">\`</span></span> float DEFAULT <span class="token string">&#39;0&#39;</span>,
  PRIMARY KEY <span class="token punctuation">(</span><span class="token variable"><span class="token variable">\`</span><span class="token function">id</span><span class="token variable">\`</span></span><span class="token punctuation">)</span>,
  UNIQUE KEY <span class="token variable"><span class="token variable">\`</span>name<span class="token variable">\`</span></span> <span class="token punctuation">(</span><span class="token variable"><span class="token variable">\`</span>name<span class="token variable">\`</span></span><span class="token punctuation">)</span>,
  KEY <span class="token variable"><span class="token variable">\`</span>deptId<span class="token variable">\`</span></span> <span class="token punctuation">(</span><span class="token variable"><span class="token variable">\`</span>deptId<span class="token variable">\`</span></span><span class="token punctuation">)</span>,
  CONSTRAINT <span class="token variable"><span class="token variable">\`</span>tb_emp8_ibfk_1<span class="token variable">\`</span></span> FOREIGN KEY <span class="token punctuation">(</span><span class="token variable"><span class="token variable">\`</span>deptId<span class="token variable">\`</span></span><span class="token punctuation">)</span> REFERENCES <span class="token variable"><span class="token variable">\`</span>tb_dept1<span class="token variable">\`</span></span> <span class="token punctuation">(</span><span class="token variable"><span class="token variable">\`</span><span class="token function">id</span><span class="token variable">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">)</span> <span class="token assign-left variable">ENGINE</span><span class="token operator">=</span>InnoDB DEFAULT <span class="token assign-left variable">CHARSET</span><span class="token operator">=</span>gb2312
<span class="token number">1</span> row <span class="token keyword">in</span> <span class="token builtin class-name">set</span> <span class="token punctuation">(</span><span class="token number">0.19</span> sec<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,273),l=[o];function t(c,i){return a(),n("div",null,l)}const u=s(p,[["render",t],["__file","3. 约束管理.html.vue"]]);export{u as default};
