import{_ as a}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as e,c as s,e as n}from"./app.37260b26.js";const i={},d=n(`<h1 id="用户和组" tabindex="-1"><a class="header-anchor" href="#用户和组" aria-hidden="true">#</a> 用户和组</h1><h2 id="用户管理" tabindex="-1"><a class="header-anchor" href="#用户管理" aria-hidden="true">#</a> 用户管理</h2><h3 id="管理用户" tabindex="-1"><a class="header-anchor" href="#管理用户" aria-hidden="true">#</a> 管理用户</h3><p>切换管理员身份</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">su</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>注销当前用户(需要运行级别)</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">logout</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>添加用户</p><div class="language-sehll line-numbers-mode" data-ext="sehll"><pre class="language-sehll"><code>useradd [-d] [指定目录名] 用户名
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>默认该用户的主目录为 <code>/home/用户名/</code>, 也可以添加参数给用户指定主目录.</p><blockquote><p>-d: directory</p></blockquote><p>创建一个用户 <code>king</code> 并指定主目录为 <code>/home/king</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">useradd</span> <span class="token parameter variable">-d</span> /home/king king
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>设置密码</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">passwd</span> 用户名
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>给 <code>king</code> 设置密码</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">passwd</span> king
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>查看当前用户所在的目录</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">pwd</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>删除用户</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">userdel</span> <span class="token punctuation">[</span>-r<span class="token punctuation">]</span> 用户名
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>删除用户 <code>king</code> 并保留主目录</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">userdel</span> king
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>删除用户和主目录</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">userdel</span> <span class="token parameter variable">-r</span> king
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>查询用户信息</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">id</span> 用户名
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>切换用户</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">su</span> 用户名
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>高权限切换到低权限不需要密码.</p><p>返回原来的用户需要 <code>exit</code>/<code>logout</code> 指令.</p></blockquote><p>查看初始登录用户</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">whoami</span> <span class="token operator">|</span> <span class="token function">who</span> am i
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>带空格分隔可显示详细信息.</p><p>只会显示第一个登录的用户, 中间通过 <code>su</code> 命令切换不会记录.</p></blockquote><h3 id="用户组" tabindex="-1"><a class="header-anchor" href="#用户组" aria-hidden="true">#</a> 用户组</h3><p>新增组</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">groupadd</span> 组名
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>删除组</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">groupdel</span> 组名
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>新增用户时放入一个组</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">useradd</span> <span class="token parameter variable">-g</span> 用户组 用户名
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>不指定组的时候默认会创建一个和用户名同名的组, 该组默认只有该用户一人.</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@Linux home<span class="token punctuation">]</span><span class="token comment"># id root</span>
<span class="token assign-left variable">uid</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span> <span class="token assign-left variable">gid</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span> 组<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>修改用户组</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">usermod</span> <span class="token parameter variable">-g</span> 用户组 用户名
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="相关文件" tabindex="-1"><a class="header-anchor" href="#相关文件" aria-hidden="true">#</a> 相关文件</h3><p>用户的配置文件:</p><blockquote><p>/etc/passwd</p><p>每一行都对应一个用户</p></blockquote><p>含义:</p><blockquote><p>用户名:口令:用户标识符:组标识符:注释性描述:主目录:登录 Shell</p><p>显示 <code>x</code> 为无法查看</p><p>登录 Shell: 登录命令经过 <code>sh</code> 解析后的命令(bash(国内), tcsh, csh 等等)</p><p>Shell 可以看做是一个命令解释器，为我们提供了交互式的文本控制台界面，我们可以通过终端控制台来输入命令，由 shell 进行解释并最终交给内核执行</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>root:x:0:0:root:/root:/bin/bash
admin:x:1000:1000:admin:/home/admin:/bin/bash
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>口令配置文件:</p><blockquote><p>/etc/shadow</p><p>含义: 登录名:加密口令:最后一次修改时间:最小时间间隔:最大时间间隔:警告时间:不活动时间:失效时间:标志</p><p>没有密码显示为 <code>!!</code></p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>root:<span class="token variable">$6</span><span class="token variable">$xr04p</span>.ELb1j3qIIo<span class="token variable">$Tw42zWccKfIpWQ7bP</span>/3y8f2a7Cz44tYEM3.HAIMLYqrwfUahAsNRkohiSwyMlF.ocd3KsSSjZGZ4A5NffC4Lo/::0:99999:7:::
king5:<span class="token operator">!</span><span class="token operator">!</span>:19264:0:99999:7:::
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>组配置文件:</p><blockquote><p>/etc/group</p><p>含义: 组名:口令:组标识号:组内用户列表</p><p>组内用户可能会被隐藏无法查看</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>root:x:0:
admin:x:1000:admin
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="组管理" tabindex="-1"><a class="header-anchor" href="#组管理" aria-hidden="true">#</a> 组管理</h2><p>Linux 中的每个用户都必须属于一个组, 不能独立于组外. 在 Linux 中每个文件都有所有者, 所在组, 其他组的概念.</p><h3 id="所有者" tabindex="-1"><a class="header-anchor" href="#所有者" aria-hidden="true">#</a> 所有者</h3><p>查看文件所有者</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">ls</span> <span class="token parameter variable">-ahl</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="https://gcore.jsdelivr.net/gh/SurplusFate/guide_img@main/img/202210102057720.png" alt="image-20221010174556638"></p><p>修改文件所有者</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">chown</span> <span class="token punctuation">[</span>选项<span class="token punctuation">]</span> 用户名 文件名/目录
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>修改文件所有者和所在组</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">chown</span> <span class="token punctuation">[</span>选项<span class="token punctuation">]</span> 用户名:用户组 文件/目录
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>参数选项</p><blockquote><p>-R 多级目录需要递归</p></blockquote><p>使用 <code>root</code> 创建一个文件 apple.txt, 将所有者修改为 <code>admin</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">touch</span> apple.txt
<span class="token function">chown</span> admin apple.txt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>将 <code>/home/test</code> 目录下的所有文件和目录的所有者都改成 tom</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">chown</span> <span class="token parameter variable">-R</span> /home/test
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="所在组" tabindex="-1"><a class="header-anchor" href="#所在组" aria-hidden="true">#</a> 所在组</h3><p>查看 文件/目录 所在组</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> /home
<span class="token function">ls</span> <span class="token parameter variable">-ahl</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://gcore.jsdelivr.net/gh/SurplusFate/guide_img@main/img/202210102056818.png" alt="image-20221010180032725"></p><p>创建组</p><p>基本语法</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">groupadd</span> 组名
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>创建一个组 monster, 创建一个用户 fox, 放入 monster 组中</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">groupadd</span> monster
<span class="token function">useradd</span> <span class="token parameter variable">-g</span> monster fox
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>修改文件所在组</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">chgrp</span> <span class="token punctuation">[</span>选项<span class="token punctuation">]</span> 组名 文件/目录
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>参数选项</p><blockquote><p>-R 多级目录需要递归</p></blockquote><h3 id="其他组" tabindex="-1"><a class="header-anchor" href="#其他组" aria-hidden="true">#</a> 其他组</h3><p>除文件所有者和所在组用户外, 系统的其他用户都是文件的其他组.</p><h3 id="修改用户所在组" tabindex="-1"><a class="header-anchor" href="#修改用户所在组" aria-hidden="true">#</a> 修改用户所在组</h3><p>需要 root 权限.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">usermod</span> <span class="token parameter variable">-g</span> 组名 用户名
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>修改该用户登录的初始目录</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">usermod</span> <span class="token parameter variable">-d</span> 目录名 用户名
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>该用户要拥有进入新目录的权限, 否则失败.</p></blockquote><h2 id="文件权限类" tabindex="-1"><a class="header-anchor" href="#文件权限类" aria-hidden="true">#</a> 文件权限类</h2><h3 id="文件属性" tabindex="-1"><a class="header-anchor" href="#文件属性" aria-hidden="true">#</a> 文件属性</h3><p>Linux 系统是一种典型的多用户系统，不同的用户处于不同的地位，拥有不同的权限。为了保护系统的安全性，Linux 系统对不同的用户访问同一文件（包括目录文件）的权限做了不同的规定。在 Linux 中我们可以使用 ll 或者 ls -l 来显示一个文件的属性以及文件所属的用户和组</p><p>从左到右的 10 个字符标识</p><p><img src="https://gcore.jsdelivr.net/gh/SurplusFate/guide_img@main/img/202210101821638.png" alt="image-20220517231040047"></p><p>如果没有权限，就会出现减号 <code>-</code> ，从左至右用 0-9 这些数字来表示.</p><ul><li>0 位表示类型</li></ul><p>在 Linux 中第一个字符代表这个文件是目录、文件或链接文件</p><blockquote><p><code>-</code> 代表文件</p><p><code>d</code> 代表目录</p><p><code>c</code> 代表字符设备文件(鼠标, 键盘)</p><p><code>b</code> 代表块设备(硬盘)</p><p><code>l</code> 链接文档 （link file）</p></blockquote><ul><li><p>第 1-3 位确定属主（该文件的所有者）拥有该文件的权限。User</p></li><li><p>第 4-6 位确定属组（所有者的同组用户）拥有该文件的权限。Group</p></li><li><p>第 7-9 位确定其他用户拥有该文件的权限 Other</p></li></ul><p><code>rwx</code> 作用文件和目录的不同解释</p><p>作用到文件：</p><p>【r】: 代表可读（read) 可以读取，查看</p><p>【w】：代表可写（write) 可以修改，但是不代表可以删除该文件，删除一个文件的前提条件是对该文件所在的目录有写权限，才能删除该文件</p><p>【x】：代表可执行(execute) 可以被系统执行</p><p>作用到目录:</p><p>【r】: 代表可读（read) 可以读取，ls 查看目录内容</p><p>【w】：代表可写（write) 可以修改，目录内创建+删除+重命名目录</p><p>【x】：代表可执行(execute) 可以进入该目录</p><p>文件基本属性介绍</p><p><img src="https://gcore.jsdelivr.net/gh/SurplusFate/guide_img@main/img/202210102056197.png" alt="image-20220517232953855"></p><p>（1）如果查看到是文件：链接数指的是硬链接个数。</p><p>（2）如果查看的是文件夹：链接数指的是子文件夹个数。</p><h3 id="chmod-改变权限" tabindex="-1"><a class="header-anchor" href="#chmod-改变权限" aria-hidden="true">#</a> <code>chmod</code> 改变权限</h3><p><img src="https://gcore.jsdelivr.net/gh/SurplusFate/guide_img@main/img/202210102056957.png" alt="image-20220517233623454"></p><blockquote><p>权限可以用数字表示为: r=4, w=2, x=1</p><p>rwx = 4 + 2 + 1</p></blockquote><p>示例</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 增加执行权限</span>
<span class="token function">chmod</span> +x nginx.conf

<span class="token comment"># chmod [u|g|o|a] +-= {rwx} 文件或目录</span>
<span class="token function">chmod</span> u+x nginx.conf
<span class="token function">chmod</span> u-x nginx.conf
<span class="token function">chmod</span> <span class="token assign-left variable">u</span><span class="token operator">=</span>x nginx.conf
<span class="token function">chmod</span> a+x nginx.conf
<span class="token function">chmod</span> <span class="token assign-left variable">a</span><span class="token operator">=</span>rwx nginx.conf

<span class="token comment"># r=4 w=2 x=1</span>
<span class="token comment"># 直接用数字修改权限</span>
<span class="token function">chmod</span> <span class="token number">777</span> nginx.conf

<span class="token comment"># 修改整个文件夹的所有者，所属组，其他用户都具有可读可写可执行权限</span>
<span class="token function">chmod</span> <span class="token parameter variable">-R</span> <span class="token number">777</span> nginx.conf
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,121),l=[d];function c(p,o){return e(),s("div",null,l)}const u=a(i,[["render",c],["__file","4. 用户和组.html.vue"]]);export{u as default};
