const l=JSON.parse('{"key":"v-76484524","path":"/docs/Java%20%E5%9F%BA%E7%A1%80/Java/7.%20%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%EF%BC%88%E4%B8%8A%EF%BC%89.html","title":"7. 面向对象（上）","lang":"zh-CN","frontmatter":{"icon":"note","date":"2022-07-07T00:00:00.000Z","order":7,"category":["java"],"summary":"7. 面向对象（上） 面向过程和面向对象的区别： \\" 1. 面向过程:\\" \\"\\" \\" 主要关注点是：实现的具体过程，因果关系。\\" \\"\\" \\" 优点：对于业务逻辑比较简单的程序，可以达到快速开发，前期投入成本较低。\\" \\"\\" \\" 缺点：采用面向过程的方式开发很难解决非常复杂的业务逻辑，另外面向过程的方式最终导致的软件拓展力差。另外，由于没有独立体的概念，所以无法达到","head":[["meta",{"property":"og:url","content":"https://SurplusFate.github.io/docs/Java%20%E5%9F%BA%E7%A1%80/Java/7.%20%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%EF%BC%88%E4%B8%8A%EF%BC%89.html"}],["meta",{"property":"og:site_name","content":"空~"}],["meta",{"property":"og:title","content":"7. 面向对象（上）"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2022-11-30T09:18:29.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:published_time","content":"2022-07-07T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2022-11-30T09:18:29.000Z"}]]},"excerpt":"","headers":[{"level":2,"title":"类和对象","slug":"类和对象","link":"#类和对象","children":[{"level":3,"title":"定义类","slug":"定义类","link":"#定义类","children":[]},{"level":3,"title":"定义 Field","slug":"定义-field","link":"#定义-field","children":[]},{"level":3,"title":"定义方法","slug":"定义方法","link":"#定义方法","children":[]},{"level":3,"title":"static 关键字","slug":"static-关键字","link":"#static-关键字","children":[]},{"level":3,"title":"构造器","slug":"构造器","link":"#构造器","children":[]},{"level":3,"title":"对象的产生和使用","slug":"对象的产生和使用","link":"#对象的产生和使用","children":[]},{"level":3,"title":"对象、引用","slug":"对象、引用","link":"#对象、引用","children":[]},{"level":3,"title":"对象的 this 引用","slug":"对象的-this-引用","link":"#对象的-this-引用","children":[]}]},{"level":2,"title":"方法详解","slug":"方法详解","link":"#方法详解","children":[{"level":3,"title":"方法的参数传递机制","slug":"方法的参数传递机制","link":"#方法的参数传递机制","children":[]},{"level":3,"title":"形参个数可变的方法","slug":"形参个数可变的方法","link":"#形参个数可变的方法","children":[]},{"level":3,"title":"递归方法","slug":"递归方法","link":"#递归方法","children":[]},{"level":3,"title":"方法重载","slug":"方法重载","link":"#方法重载","children":[]}]},{"level":2,"title":"JVM 内存模型","slug":"jvm-内存模型","link":"#jvm-内存模型","children":[{"level":3,"title":"运行时数据区域","slug":"运行时数据区域","link":"#运行时数据区域","children":[]},{"level":3,"title":"程序计数器","slug":"程序计数器","link":"#程序计数器","children":[]},{"level":3,"title":"Java 虚拟机栈","slug":"java-虚拟机栈","link":"#java-虚拟机栈","children":[]},{"level":3,"title":"本地方法栈","slug":"本地方法栈","link":"#本地方法栈","children":[]},{"level":3,"title":"Java 堆","slug":"java-堆","link":"#java-堆","children":[]},{"level":3,"title":"方法区（永久代）","slug":"方法区-永久代","link":"#方法区-永久代","children":[]}]},{"level":2,"title":"成员变量和局部变量","slug":"成员变量和局部变量","link":"#成员变量和局部变量","children":[{"level":3,"title":"成员变量","slug":"成员变量","link":"#成员变量","children":[]},{"level":3,"title":"局部变量","slug":"局部变量","link":"#局部变量","children":[]}]},{"level":2,"title":"隐藏和封装","slug":"隐藏和封装","link":"#隐藏和封装","children":[{"level":3,"title":"使用访问控制符","slug":"使用访问控制符","link":"#使用访问控制符","children":[]},{"level":3,"title":"package","slug":"package","link":"#package","children":[]}]},{"level":2,"title":"深入构造器","slug":"深入构造器","link":"#深入构造器","children":[{"level":3,"title":"使用构造器执行初始化","slug":"使用构造器执行初始化","link":"#使用构造器执行初始化","children":[]},{"level":3,"title":"构造器重载","slug":"构造器重载","link":"#构造器重载","children":[]}]},{"level":2,"title":"类的继承","slug":"类的继承","link":"#类的继承","children":[{"level":3,"title":"继承的特点","slug":"继承的特点","link":"#继承的特点","children":[]},{"level":3,"title":"重写父类的方法","slug":"重写父类的方法","link":"#重写父类的方法","children":[]},{"level":3,"title":"super 限定","slug":"super-限定","link":"#super-限定","children":[]},{"level":3,"title":"调用父类构造器","slug":"调用父类构造器","link":"#调用父类构造器","children":[]},{"level":3,"title":"继承关系中的初始化顺序","slug":"继承关系中的初始化顺序","link":"#继承关系中的初始化顺序","children":[]}]},{"level":2,"title":"多态","slug":"多态","link":"#多态","children":[{"level":3,"title":"多态性","slug":"多态性","link":"#多态性","children":[]},{"level":3,"title":"引用变量的强制类型转换","slug":"引用变量的强制类型转换","link":"#引用变量的强制类型转换","children":[]},{"level":3,"title":"instanceof 运算符","slug":"instanceof-运算符","link":"#instanceof-运算符","children":[]}]},{"level":2,"title":"继承与组合","slug":"继承与组合","link":"#继承与组合","children":[{"level":3,"title":"使用继承的注意点","slug":"使用继承的注意点","link":"#使用继承的注意点","children":[]},{"level":3,"title":"利用组合实现复用","slug":"利用组合实现复用","link":"#利用组合实现复用","children":[]}]},{"level":2,"title":"初始化块","slug":"初始化块","link":"#初始化块","children":[{"level":3,"title":"使用初始化块","slug":"使用初始化块","link":"#使用初始化块","children":[]},{"level":3,"title":"初始化块和构造器","slug":"初始化块和构造器","link":"#初始化块和构造器","children":[]},{"level":3,"title":"静态初始化块","slug":"静态初始化块","link":"#静态初始化块","children":[]}]}],"git":{"createdTime":1669799909000,"updatedTime":1669799909000,"contributors":[{"name":"superX","email":"1543403469@qq.com","commits":1}]},"readingTime":{"minutes":109.62,"words":32887},"filePathRelative":"docs/Java 基础/Java/7. 面向对象（上）.md","localizedDate":"2022年7月7日"}');export{l as data};
