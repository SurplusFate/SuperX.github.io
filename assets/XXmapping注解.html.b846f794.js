import{_ as n}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as a,c as s,e as t}from"./app.c25ca293.js";const e={},p=t(`<h1 id="mapping" tabindex="-1"><a class="header-anchor" href="#mapping" aria-hidden="true">#</a> @**Mapping</h1><p>使用 @**Mapping 注解都是直接在他的括号中加 servlet 的名称.</p><p>默认只写一个参数的话，就是给 value 赋值.</p><p>第一个 <code>/</code> 可省略(访问根目录不能省).</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/hello&quot;</span><span class="token punctuation">)</span>
<span class="token comment">// 等价于</span>
<span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>value 属性是一个字符串类型的<strong>数组</strong>，表示请求映射能够匹配多个请求地址所对应的请求.</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;/other&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;/other2&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;/other3&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toOther</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string">&quot;other&quot;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="method-属性" tabindex="-1"><a class="header-anchor" href="#method-属性" aria-hidden="true">#</a> method 属性</h2><p>@RequestMapping 的 method 属性通过请求的请求方式（get 或 post）匹配请求映射, 他也是一个<strong>数组</strong>, 但是是 RequestMethod 类的数组, 表示请求映射能够匹配多种请求方式的请求.</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;/&quot;</span><span class="token punctuation">,</span>method <span class="token operator">=</span> <span class="token class-name">RequestMethod</span><span class="token punctuation">.</span><span class="token constant">POST</span><span class="token punctuation">)</span>
<span class="token comment">// 等价于</span>
<span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>@RequestMapping 的派生注解:</p><blockquote><p><strong>处理 get 请求的映射 —&gt; @GetMapping 处理 post 请求的映射 —&gt; @PostMapping 处理 put 请求的映射 —&gt; @PutMapping 处理 delete 请求的映射 —&gt; @DeleteMapping</strong></p></blockquote><h2 id="params-属性" tabindex="-1"><a class="header-anchor" href="#params-属性" aria-hidden="true">#</a> params 属性</h2><p>params 属性通过请求的请求参数匹配请求映射, params 属性也是一个字符串类型的数组, 可以通过以下四种表达式设置请求参数和请求映射的匹配关系:</p><blockquote><ol><li>&quot;param&quot;: 表示要求请求映射所匹配的请求必须携带 param 请求参数</li><li>&quot;!param&quot;: 表示要求请求映射所匹配的请求不能携带 param 请求参数</li><li>&quot;param=value&quot;: 表示要求请求映射所匹配的请求必须携带 param 请求参数且 param=value</li><li>&quot;param!=value&quot;: 表示要求请求映射所匹配的请求必须携带 param 请求参数且 param!=value</li></ol></blockquote><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>
        value <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;/other&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;other2&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;other3&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
        method <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token class-name">RequestMethod</span><span class="token punctuation">.</span><span class="token constant">GET</span><span class="token punctuation">,</span> <span class="token class-name">RequestMethod</span><span class="token punctuation">.</span><span class="token constant">POST</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
        params <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;username=Keeling&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;password!=123456&quot;</span><span class="token punctuation">}</span>
<span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toOther</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string">&quot;other&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>要想访问就得把 username 和 password 给他(username <strong>必须是</strong> Keeling, password <strong>必须不是</strong> 123456).</p><h2 id="requestparam-注解" tabindex="-1"><a class="header-anchor" href="#requestparam-注解" aria-hidden="true">#</a> RequestParam 注解</h2><p>设置处理器方法参数的默认值.</p><blockquote><p>value: 初始参数</p><p>required: 是否必须有该参数</p><p>defaultValue: 初始参数的值</p></blockquote><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">ModelAndView</span> <span class="token function">getType</span><span class="token punctuation">(</span>
    <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;page&quot;</span><span class="token punctuation">,</span> required <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">,</span> defaultValue <span class="token operator">=</span> <span class="token string">&quot;1&quot;</span><span class="token punctuation">)</span> <span class="token class-name">Integer</span> page<span class="token punctuation">,</span>
    <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;size&quot;</span><span class="token punctuation">,</span> required <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token class-name">Integer</span> size<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>没有传入 page 参数时将使用初始参数和初始值.</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">ModelAndView</span> <span class="token function">getType</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>defaultValue <span class="token operator">=</span> <span class="token string">&quot;1&quot;</span><span class="token punctuation">)</span> <span class="token keyword">int</span> pn<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>pn 初始为 1.</p><h2 id="ant-风格的路径" tabindex="-1"><a class="header-anchor" href="#ant-风格的路径" aria-hidden="true">#</a> ant 风格的路径</h2><p>这种路径的优先级比完整路径低, 可以用来做统一跳转.</p><blockquote><p>? 表示任意的单个字符</p><p>* 表示任意的 0 个或多个字符</p><p>**/ 表示任意的一层或多层目录</p></blockquote><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;h?h/*&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toDemo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string">&quot;demo&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>匹配所有 html 后缀的请求.</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Controller</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ViewController</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/**/*.html&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">pager</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 从请求中截取路径名和页面名</span>
        <span class="token class-name">String</span> requestURI <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getRequestURI</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//   /settings/dictionary/index.html  ----&gt; settings/dictionary/index</span>
        <span class="token keyword">return</span> requestURI<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> requestURI<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token string">&quot;.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,30),o=[p];function c(u,l){return a(),s("div",null,o)}const d=n(e,[["render",c],["__file","XXmapping注解.html.vue"]]);export{d as default};
