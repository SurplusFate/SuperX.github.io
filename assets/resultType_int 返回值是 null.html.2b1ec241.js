import{_ as e}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as t,c as d,e as o}from"./app.03ab472a.js";const c={},l=o('<h1 id="resulttype-int-返回值是-null" tabindex="-1"><a class="header-anchor" href="#resulttype-int-返回值是-null" aria-hidden="true">#</a> resultType=int 返回值是 null</h1><p>在 xml 中写 SQL 语句时, 指定的 <code>resultType=&quot;int&quot;</code> 当 <code>mysql</code> 中没查到数据时返回值不是 -1, 也不是 0, 而是 <code>null</code>.</p><p>原因:</p><p>mybatis 对 <code>resultType</code> 的官方描述</p><blockquote><p>期望从这条语句中返回结果的类全限定名或别名。 注意，如果返回的是集合，那应该设置为集合包含的类型，而不是集合本身的类型。 resultType 和 resultMap 之间只能同时使用一个。</p></blockquote><p>其中提到类别名, 在查找官方文档中类别名对照表时发现:</p><table><thead><tr><th>别名</th><th>映射的类型</th></tr></thead><tbody><tr><td><code>_int</code></td><td><code>int</code></td></tr><tr><td><code>_integer</code></td><td><code>int</code></td></tr><tr><td><code>int</code></td><td><code>Integer</code></td></tr></tbody></table><p><code>int</code> 对应的是 <code>Integer</code> 对象, 所以最后返回 <code>null</code>.</p>',8),r=[l];function n(s,i){return t(),d("div",null,r)}const a=e(c,[["render",n],["__file","resultType=int 返回值是 null.html.vue"]]);export{a as default};
