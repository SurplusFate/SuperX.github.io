const l=JSON.parse('{"key":"v-65ec0e52","path":"/docs/%E5%B0%8F%E8%AE%B0/%E5%87%BD%E6%95%B0%E5%BC%8F%E7%BC%96%E7%A8%8B.html","title":"函数式编程-Stream 流","lang":"zh-CN","frontmatter":{"summary":"函数式编程-Stream 流 1. 概述 1.1 为什么学？ 能够看懂公司里的代码; 大数量下处理集合效率高; 代码可读性高; 消灭嵌套地狱; 1.2 函数式编程思想 1.2.1 概念 面向对象思想需要关注用什么对象完成什么事情。而函数式编程思想就类似于我们数学中的函数。它主要关注的是对数据进行了什么操作。 1.2.2 优点 代码简洁，开发快速; 接近自然语","head":[["meta",{"property":"og:url","content":"https://SurplusFate.github.io/docs/%E5%B0%8F%E8%AE%B0/%E5%87%BD%E6%95%B0%E5%BC%8F%E7%BC%96%E7%A8%8B.html"}],["meta",{"property":"og:site_name","content":"空~"}],["meta",{"property":"og:title","content":"函数式编程-Stream 流"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2022-11-30T02:35:00.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:modified_time","content":"2022-11-30T02:35:00.000Z"}]]},"excerpt":"","headers":[{"level":2,"title":"1. 概述","slug":"_1-概述","link":"#_1-概述","children":[{"level":3,"title":"1.1 为什么学？","slug":"_1-1-为什么学","link":"#_1-1-为什么学","children":[]},{"level":3,"title":"1.2 函数式编程思想","slug":"_1-2-函数式编程思想","link":"#_1-2-函数式编程思想","children":[]}]},{"level":2,"title":"2. Lambda 表达式","slug":"_2-lambda-表达式","link":"#_2-lambda-表达式","children":[{"level":3,"title":"2.1 概述","slug":"_2-1-概述","link":"#_2-1-概述","children":[]},{"level":3,"title":"2.2 核心原则","slug":"_2-2-核心原则","link":"#_2-2-核心原则","children":[]},{"level":3,"title":"2. 3 基本格式","slug":"_2-3-基本格式","link":"#_2-3-基本格式","children":[]},{"level":3,"title":"2.4 省略规则","slug":"_2-4-省略规则","link":"#_2-4-省略规则","children":[]}]},{"level":2,"title":"3. Stream 流","slug":"_3-stream-流","link":"#_3-stream-流","children":[{"level":3,"title":"3.1 概述","slug":"_3-1-概述","link":"#_3-1-概述","children":[]},{"level":3,"title":"3.2 案例数据准备","slug":"_3-2-案例数据准备","link":"#_3-2-案例数据准备","children":[]},{"level":3,"title":"3.3 快速入门","slug":"_3-3-快速入门","link":"#_3-3-快速入门","children":[]},{"level":3,"title":"3.4 常用操作","slug":"_3-4-常用操作","link":"#_3-4-常用操作","children":[]},{"level":3,"title":"3.5 注意事项","slug":"_3-5-注意事项","link":"#_3-5-注意事项","children":[]}]},{"level":2,"title":"4. Optional","slug":"_4-optional","link":"#_4-optional","children":[{"level":3,"title":"4.1 概述","slug":"_4-1-概述","link":"#_4-1-概述","children":[]},{"level":3,"title":"4.2 使用","slug":"_4-2-使用","link":"#_4-2-使用","children":[]}]},{"level":2,"title":"5. 函数式接口","slug":"_5-函数式接口","link":"#_5-函数式接口","children":[{"level":3,"title":"5.1 概述","slug":"_5-1-概述","link":"#_5-1-概述","children":[]},{"level":3,"title":"5.2 常见函数式接口","slug":"_5-2-常见函数式接口","link":"#_5-2-常见函数式接口","children":[]},{"level":3,"title":"5.3 常用的默认方法","slug":"_5-3-常用的默认方法","link":"#_5-3-常用的默认方法","children":[]}]},{"level":2,"title":"6. 方法引用","slug":"_6-方法引用","link":"#_6-方法引用","children":[{"level":3,"title":"6.1 推荐用法","slug":"_6-1-推荐用法","link":"#_6-1-推荐用法","children":[]},{"level":3,"title":"6.2 基本格式","slug":"_6-2-基本格式","link":"#_6-2-基本格式","children":[]},{"level":3,"title":"6.3 语法详解(了解)","slug":"_6-3-语法详解-了解","link":"#_6-3-语法详解-了解","children":[]}]},{"level":2,"title":"7. 高级用法","slug":"_7-高级用法","link":"#_7-高级用法","children":[{"level":3,"title":"基本数据类型优化","slug":"基本数据类型优化","link":"#基本数据类型优化","children":[]},{"level":3,"title":"并行流","slug":"并行流","link":"#并行流","children":[]}]}],"git":{"createdTime":1669774262000,"updatedTime":1669775700000,"contributors":[{"name":"superX","email":"1543403469@qq.com","commits":2}]},"readingTime":{"minutes":23.86,"words":7159},"filePathRelative":"docs/小记/函数式编程.md","localizedDate":"2022年11月30日"}');export{l as data};
