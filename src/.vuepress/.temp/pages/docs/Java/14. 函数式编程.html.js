export const data = JSON.parse("{\"key\":\"v-08f3ab5a\",\"path\":\"/docs/Java/14.%20%E5%87%BD%E6%95%B0%E5%BC%8F%E7%BC%96%E7%A8%8B.html\",\"title\":\"14. 函数式编程\",\"lang\":\"zh-CN\",\"frontmatter\":{\"icon\":\"note\",\"date\":\"2022-08-12T00:00:00.000Z\",\"order\":14,\"category\":[\"java\"],\"summary\":\"14. 函数式编程 Lambda 表达式\\r\\\" lambda表达式用于简化匿名内部类的实现，只作用于接口，抽象方法无法使用。\\\" Lambda 表达式是使用最小可能语法编写的函数定义： 1. Lambda 作用于函数式接口（有且仅有一个抽象方法，但是可以有多个非抽象方法的接口）。 2. Lambda 表达式产生函数，而不是类。 虽然在 JVM（Java Virt\",\"head\":[[\"meta\",{\"property\":\"og:url\",\"content\":\"https://SurplusFate.github.io/docs/Java/14.%20%E5%87%BD%E6%95%B0%E5%BC%8F%E7%BC%96%E7%A8%8B.html\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"空~\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"14. 函数式编程\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"zh-CN\"}],[\"meta\",{\"property\":\"article:published_time\",\"content\":\"2022-08-12T00:00:00.000Z\"}]]},\"excerpt\":\"\",\"headers\":[{\"level\":2,\"title\":\"Lambda 表达式\",\"slug\":\"lambda-表达式\",\"link\":\"#lambda-表达式\",\"children\":[{\"level\":3,\"title\":\"递归\",\"slug\":\"递归\",\"link\":\"#递归\",\"children\":[]}]},{\"level\":2,\"title\":\"方法引用\",\"slug\":\"方法引用\",\"link\":\"#方法引用\",\"children\":[{\"level\":3,\"title\":\"Runnable 接口\",\"slug\":\"runnable-接口\",\"link\":\"#runnable-接口\",\"children\":[]},{\"level\":3,\"title\":\"未绑定的方法引用\",\"slug\":\"未绑定的方法引用\",\"link\":\"#未绑定的方法引用\",\"children\":[]},{\"level\":3,\"title\":\"构造函数引用\",\"slug\":\"构造函数引用\",\"link\":\"#构造函数引用\",\"children\":[]}]},{\"level\":2,\"title\":\"函数式接口\",\"slug\":\"函数式接口\",\"link\":\"#函数式接口\",\"children\":[{\"level\":3,\"title\":\"多参数函数式接口\",\"slug\":\"多参数函数式接口\",\"link\":\"#多参数函数式接口\",\"children\":[]},{\"level\":3,\"title\":\"缺少基本类型的函数\",\"slug\":\"缺少基本类型的函数\",\"link\":\"#缺少基本类型的函数\",\"children\":[]}]},{\"level\":2,\"title\":\"高阶函数\",\"slug\":\"高阶函数\",\"link\":\"#高阶函数\",\"children\":[]},{\"level\":2,\"title\":\"闭包\",\"slug\":\"闭包\",\"link\":\"#闭包\",\"children\":[{\"level\":3,\"title\":\"作为闭包的内部类\",\"slug\":\"作为闭包的内部类\",\"link\":\"#作为闭包的内部类\",\"children\":[]}]},{\"level\":2,\"title\":\"函数组合\",\"slug\":\"函数组合\",\"link\":\"#函数组合\",\"children\":[]},{\"level\":2,\"title\":\"流式编程\",\"slug\":\"流式编程\",\"link\":\"#流式编程\",\"children\":[{\"level\":3,\"title\":\"创建流\",\"slug\":\"创建流\",\"link\":\"#创建流\",\"children\":[]},{\"level\":3,\"title\":\"中间操作\",\"slug\":\"中间操作\",\"link\":\"#中间操作\",\"children\":[]},{\"level\":3,\"title\":\"Optional 类\",\"slug\":\"optional-类\",\"link\":\"#optional-类\",\"children\":[]},{\"level\":3,\"title\":\"终端操作\",\"slug\":\"终端操作\",\"link\":\"#终端操作\",\"children\":[]}]}],\"readingTime\":{\"minutes\":45.46,\"words\":13639},\"filePathRelative\":\"docs/Java/14. 函数式编程.md\",\"localizedDate\":\"2022年8月12日\"}")

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
